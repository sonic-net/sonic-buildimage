# libyang

LIBPCRE3_VERSION = 8.39
LIBPCRE3_SUBVERSION = 15

export LIBPCRE3_VERSION LIBPCRE3_SUBVERSION

LIBPCRE3 = libpcre3_$(LIBPCRE3_VERSION)-$(LIBPCRE3_SUBVERSION)_$(CONFIGURED_ARCH).deb
$(LIBPCRE3)_SRC_PATH = $(SRC_PATH)/libpcre3
ifeq ($(BLDENV),trixie)
SONIC_MAKE_DEBS += $(LIBPCRE3)
endif

LIBPCRE16_3 = libpcre16-3_$(LIBPCRE3_VERSION)-$(LIBPCRE3_SUBVERSION)_$(CONFIGURED_ARCH).deb
$(eval $(call add_derived_package,$(LIBPCRE3),$(LIBPCRE16_3)))

LIBPCRE32_3 = libpcre32-3_$(LIBPCRE3_VERSION)-$(LIBPCRE3_SUBVERSION)_$(CONFIGURED_ARCH).deb
$(eval $(call add_derived_package,$(LIBPCRE3),$(LIBPCRE32_3)))

LIBPCRECPP0V5 = libpcrecpp0v5_$(LIBPCRE3_VERSION)-$(LIBPCRE3_SUBVERSION)_$(CONFIGURED_ARCH).deb
$(eval $(call add_derived_package,$(LIBPCRE3),$(LIBPCRECPP0V5)))

LIBPCRE3_DEV = libpcre3-dev_$(LIBPCRE3_VERSION)-$(LIBPCRE3_SUBVERSION)_$(CONFIGURED_ARCH).deb
$(LIBPCRE3_DEV)_DEPENDS += $(LIBPCRE3) $(LIBPCRE16_3) $(LIBPCRE32_3) $(LIBPCRECPP0V5)
$(LIBPCRE3_DEV)_RDEPENDS += $(LIBPCRE3) $(LIBPCRE16_3) $(LIBPCRE32_3) $(LIBPCRECPP0V5)
$(eval $(call add_derived_package,$(LIBPCRE3),$(LIBPCRE3_DEV)))

LIBPCRE3_DBG = libpcre3-dbg_$(LIBPCRE3_VERSION)-$(LIBPCRE3_SUBVERSION)_$(CONFIGURED_ARCH).deb
$(eval $(call add_derived_package,$(LIBPCRE3),$(LIBPCRE3_DBG)))

export LIBPCRE3 LIBPCRE3_DBG LIBPCRE3_DEV LIBPCRE16_3 LIBPCRE32_3 LIBPCRECPP0V5
