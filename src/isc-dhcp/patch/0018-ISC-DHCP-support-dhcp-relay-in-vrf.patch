From dd0d95e3a83b33c74b1db985ea49db7a0f0cf512 Mon Sep 17 00:00:00 2001
From: mirror-bot <mirror@github-actions>
Date: Tue, 26 Aug 2025 02:28:19 -0500
Subject: [PATCH] ISC-DHCP-support-dhcp-relay-in-vrf

---
 common/socket.c  |  7 +++++++
 relay/dhcrelay.c | 20 ++++++++++++++------
 2 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/common/socket.c b/common/socket.c
index 87c62a2..4dfad76 100644
--- a/common/socket.c
+++ b/common/socket.c
@@ -48,6 +48,7 @@
 #include <net/if_dl.h>
 #include <sys/dlpi.h>
 #endif
+struct in_addr bind_ia;
 
 #ifdef USE_SOCKET_FALLBACK
 # if !defined (USE_SOCKET_SEND)
@@ -223,6 +224,12 @@ if_register_socket(struct interface_info *info, int family,
 		memcpy(&addr->sin_addr,
 		       &local_address,
 		       sizeof(addr->sin_addr));
+		if ((info->flags & INTERFACE_STREAMS) == INTERFACE_UPSTREAM) {
+		    memcpy(&addr->sin_addr, &bind_ia, sizeof(bind_ia.s_addr));
+		    char str_buf[IFNAMSIZ];
+		    inet_ntop(AF_INET,  &bind_ia, str_buf, sizeof(str_buf));
+		    log_info("bind uplink interface %s to ip:%s success ", info->name, str_buf);
+		}
 #ifdef HAVE_SA_LEN
 		addr->sin_len = sizeof(*addr);
 #endif
diff --git a/relay/dhcrelay.c b/relay/dhcrelay.c
index a516829..416f6d9 100644
--- a/relay/dhcrelay.c
+++ b/relay/dhcrelay.c
@@ -44,6 +44,7 @@ int lexline;
 int lexchar;
 char *token_line;
 char *tlname;
+extern struct in_addr bind_ia;
 
 const char *path_dhcrelay_pid = _PATH_DHCRELAY_PID;
 isc_boolean_t no_dhcrelay_pid = ISC_FALSE;
@@ -724,7 +725,14 @@ main(int argc, char **argv) {
 			local_family = AF_INET;
 #endif
 			enable_support_for_dual_tor = 1;
- 		} else if (argv[i][0] == '-') {
+ 		} else if (!strcmp(argv[i], "-bind")) {
+                       if (++i == argc) {
+			       usage(use_v4command, argv[i-1]);
+		       }
+		       if (inet_pton(AF_INET, argv[i], &bind_ia)) {
+			   log_info("bind_ia is %s \n", argv[i]);
+		       }
+		} else if (argv[i][0] == '-') {
 			usage("Unknown command: %s", argv[i]);
  		} else {
 			struct hostent *he;
@@ -971,11 +979,6 @@ do_relay4(struct interface_info *ip, struct dhcp_packet *packet,
 			 "%s interface.", ip->name);
 		return;
 	}
-	if (ip->address_count < 1 || ip->addresses == NULL) {
-		log_info("Discarding packet received on %s interface that "
-			 "has no IPv4 address assigned.", ip->name);
-		return;
-	}
 
 	if (enable_support_for_dual_tor) {
 		if (packet->yiaddr.s_addr) {
@@ -1110,6 +1113,11 @@ do_relay4(struct interface_info *ip, struct dhcp_packet *packet,
 	if (!(ip->flags & INTERFACE_REQUESTED))
 		return;
 
+	if (ip->address_count < 1 || ip->addresses == NULL) {
+		log_info("Discarding packet received on %s interface that "
+			 "has no IPv4 address assigned.", ip->name);
+		return;
+	}
 	/* Add relay agent options if indicated.   If something goes wrong,
 	 * drop the packet.  Note this may set packet->giaddr if RFC3527
 	 * is enabled. */
-- 
2.25.1

