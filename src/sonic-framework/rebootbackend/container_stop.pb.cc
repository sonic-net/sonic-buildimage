// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rebootbackend/container_stop.proto

#include "rebootbackend/container_stop.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_rebootbackend_2fcontainer_5fstop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContainerStatus_rebootbackend_2fcontainer_5fstop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rebootbackend_2fcontainer_5fstop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StopContainersResponse_ContainerStatusEntry_DoNotUse_rebootbackend_2fcontainer_5fstop_2eproto;
class StopContainersRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopContainersRequest> _instance;
} _StopContainersRequest_default_instance_;
class ContainerStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ContainerStatus> _instance;
} _ContainerStatus_default_instance_;
class StopContainersStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopContainersStatusRequest> _instance;
} _StopContainersStatusRequest_default_instance_;
class StopContainersResponse_ContainerStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopContainersResponse_ContainerStatusEntry_DoNotUse> _instance;
} _StopContainersResponse_ContainerStatusEntry_DoNotUse_default_instance_;
class StopContainersResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopContainersResponse> _instance;
} _StopContainersResponse_default_instance_;
static void InitDefaultsscc_info_ContainerStatus_rebootbackend_2fcontainer_5fstop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ContainerStatus_default_instance_;
    new (ptr) ::ContainerStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ContainerStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContainerStatus_rebootbackend_2fcontainer_5fstop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ContainerStatus_rebootbackend_2fcontainer_5fstop_2eproto}, {}};

static void InitDefaultsscc_info_StopContainersRequest_rebootbackend_2fcontainer_5fstop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StopContainersRequest_default_instance_;
    new (ptr) ::StopContainersRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StopContainersRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopContainersRequest_rebootbackend_2fcontainer_5fstop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopContainersRequest_rebootbackend_2fcontainer_5fstop_2eproto}, {}};

static void InitDefaultsscc_info_StopContainersResponse_rebootbackend_2fcontainer_5fstop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StopContainersResponse_default_instance_;
    new (ptr) ::StopContainersResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StopContainersResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StopContainersResponse_rebootbackend_2fcontainer_5fstop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StopContainersResponse_rebootbackend_2fcontainer_5fstop_2eproto}, {
      &scc_info_StopContainersResponse_ContainerStatusEntry_DoNotUse_rebootbackend_2fcontainer_5fstop_2eproto.base,}};

static void InitDefaultsscc_info_StopContainersResponse_ContainerStatusEntry_DoNotUse_rebootbackend_2fcontainer_5fstop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StopContainersResponse_ContainerStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::StopContainersResponse_ContainerStatusEntry_DoNotUse();
  }
  ::StopContainersResponse_ContainerStatusEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StopContainersResponse_ContainerStatusEntry_DoNotUse_rebootbackend_2fcontainer_5fstop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StopContainersResponse_ContainerStatusEntry_DoNotUse_rebootbackend_2fcontainer_5fstop_2eproto}, {
      &scc_info_ContainerStatus_rebootbackend_2fcontainer_5fstop_2eproto.base,}};

static void InitDefaultsscc_info_StopContainersStatusRequest_rebootbackend_2fcontainer_5fstop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StopContainersStatusRequest_default_instance_;
    new (ptr) ::StopContainersStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StopContainersStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopContainersStatusRequest_rebootbackend_2fcontainer_5fstop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopContainersStatusRequest_rebootbackend_2fcontainer_5fstop_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_rebootbackend_2fcontainer_5fstop_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_rebootbackend_2fcontainer_5fstop_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_rebootbackend_2fcontainer_5fstop_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_rebootbackend_2fcontainer_5fstop_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::StopContainersRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::StopContainersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StopContainersRequest, request_id_),
  PROTOBUF_FIELD_OFFSET(::StopContainersRequest, container_names_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ContainerStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ContainerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ContainerStatus, status_),
  PROTOBUF_FIELD_OFFSET(::ContainerStatus, error_message_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::StopContainersStatusRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::StopContainersStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StopContainersStatusRequest, request_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::StopContainersResponse_ContainerStatusEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::StopContainersResponse_ContainerStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StopContainersResponse_ContainerStatusEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::StopContainersResponse_ContainerStatusEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::StopContainersResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::StopContainersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StopContainersResponse, status_),
  PROTOBUF_FIELD_OFFSET(::StopContainersResponse, error_message_),
  PROTOBUF_FIELD_OFFSET(::StopContainersResponse, container_status_),
  1,
  0,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::StopContainersRequest)},
  { 9, 16, sizeof(::ContainerStatus)},
  { 18, 24, sizeof(::StopContainersStatusRequest)},
  { 25, 32, sizeof(::StopContainersResponse_ContainerStatusEntry_DoNotUse)},
  { 34, 42, sizeof(::StopContainersResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StopContainersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ContainerStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StopContainersStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StopContainersResponse_ContainerStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StopContainersResponse_default_instance_),
};

const char descriptor_table_protodef_rebootbackend_2fcontainer_5fstop_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"rebootbackend/container_stop.proto\"X\n\025"
  "StopContainersRequest\022\027\n\nrequest_id\030\001 \001("
  "\tH\000\210\001\001\022\027\n\017container_names\030\002 \003(\tB\r\n\013_requ"
  "est_id\"p\n\017ContainerStatus\022$\n\006status\030\001 \001("
  "\0162\017.ShutdownStatusH\000\210\001\001\022\032\n\rerror_message"
  "\030\002 \001(\tH\001\210\001\001B\t\n\007_statusB\020\n\016_error_message"
  "\"E\n\033StopContainersStatusRequest\022\027\n\nreque"
  "st_id\030\001 \001(\tH\000\210\001\001B\r\n\013_request_id\"\211\002\n\026Stop"
  "ContainersResponse\022$\n\006status\030\001 \001(\0162\017.Shu"
  "tdownStatusH\000\210\001\001\022\032\n\rerror_message\030\002 \001(\tH"
  "\001\210\001\001\022F\n\020container_status\030\003 \003(\0132,.StopCon"
  "tainersResponse.ContainerStatusEntry\032H\n\024"
  "ContainerStatusEntry\022\013\n\003key\030\001 \001(\t\022\037\n\005val"
  "ue\030\002 \001(\0132\020.ContainerStatus:\0028\001B\t\n\007_statu"
  "sB\020\n\016_error_message*u\n\016ShutdownStatus\022\017\n"
  "\013NOT_STARTED\020\000\022\035\n\031WAITING_FOR_NICE_SHUTD"
  "OWN\020\001\022\036\n\032WAITING_FOR_FORCE_SHUTDOWN\020\002\022\010\n"
  "\004DONE\020\003\022\t\n\005ERROR\020\004b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_rebootbackend_2fcontainer_5fstop_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_rebootbackend_2fcontainer_5fstop_2eproto_sccs[5] = {
  &scc_info_ContainerStatus_rebootbackend_2fcontainer_5fstop_2eproto.base,
  &scc_info_StopContainersRequest_rebootbackend_2fcontainer_5fstop_2eproto.base,
  &scc_info_StopContainersResponse_rebootbackend_2fcontainer_5fstop_2eproto.base,
  &scc_info_StopContainersResponse_ContainerStatusEntry_DoNotUse_rebootbackend_2fcontainer_5fstop_2eproto.base,
  &scc_info_StopContainersStatusRequest_rebootbackend_2fcontainer_5fstop_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_rebootbackend_2fcontainer_5fstop_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rebootbackend_2fcontainer_5fstop_2eproto = {
  false, false, descriptor_table_protodef_rebootbackend_2fcontainer_5fstop_2eproto, "rebootbackend/container_stop.proto", 706,
  &descriptor_table_rebootbackend_2fcontainer_5fstop_2eproto_once, descriptor_table_rebootbackend_2fcontainer_5fstop_2eproto_sccs, descriptor_table_rebootbackend_2fcontainer_5fstop_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_rebootbackend_2fcontainer_5fstop_2eproto::offsets,
  file_level_metadata_rebootbackend_2fcontainer_5fstop_2eproto, 5, file_level_enum_descriptors_rebootbackend_2fcontainer_5fstop_2eproto, file_level_service_descriptors_rebootbackend_2fcontainer_5fstop_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_rebootbackend_2fcontainer_5fstop_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_rebootbackend_2fcontainer_5fstop_2eproto)), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ShutdownStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_rebootbackend_2fcontainer_5fstop_2eproto);
  return file_level_enum_descriptors_rebootbackend_2fcontainer_5fstop_2eproto[0];
}
bool ShutdownStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void StopContainersRequest::InitAsDefaultInstance() {
}
class StopContainersRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<StopContainersRequest>()._has_bits_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StopContainersRequest::StopContainersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  container_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StopContainersRequest)
}
StopContainersRequest::StopContainersRequest(const StopContainersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      container_names_(from.container_names_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_request_id()) {
    request_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_request_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StopContainersRequest)
}

void StopContainersRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopContainersRequest_rebootbackend_2fcontainer_5fstop_2eproto.base);
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopContainersRequest::~StopContainersRequest() {
  // @@protoc_insertion_point(destructor:StopContainersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopContainersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  request_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopContainersRequest::ArenaDtor(void* object) {
  StopContainersRequest* _this = reinterpret_cast< StopContainersRequest* >(object);
  (void)_this;
}
void StopContainersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopContainersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopContainersRequest& StopContainersRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopContainersRequest_rebootbackend_2fcontainer_5fstop_2eproto.base);
  return *internal_default_instance();
}


void StopContainersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StopContainersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_names_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    request_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopContainersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StopContainersRequest.request_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string container_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_container_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StopContainersRequest.container_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopContainersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StopContainersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (_internal_has_request_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StopContainersRequest.request_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  // repeated string container_names = 2;
  for (int i = 0, n = this->_internal_container_names_size(); i < n; i++) {
    const auto& s = this->_internal_container_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StopContainersRequest.container_names");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StopContainersRequest)
  return target;
}

size_t StopContainersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StopContainersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string container_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(container_names_.size());
  for (int i = 0, n = container_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      container_names_.Get(i));
  }

  // string request_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopContainersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StopContainersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopContainersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopContainersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StopContainersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StopContainersRequest)
    MergeFrom(*source);
  }
}

void StopContainersRequest::MergeFrom(const StopContainersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StopContainersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  container_names_.MergeFrom(from.container_names_);
  if (from._internal_has_request_id()) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void StopContainersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StopContainersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopContainersRequest::CopyFrom(const StopContainersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StopContainersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopContainersRequest::IsInitialized() const {
  return true;
}

void StopContainersRequest::InternalSwap(StopContainersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  container_names_.InternalSwap(&other->container_names_);
  request_id_.Swap(&other->request_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopContainersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ContainerStatus::InitAsDefaultInstance() {
}
class ContainerStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<ContainerStatus>()._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_error_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ContainerStatus::ContainerStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ContainerStatus)
}
ContainerStatus::ContainerStatus(const ContainerStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_error_message()) {
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_message(),
      GetArena());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:ContainerStatus)
}

void ContainerStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ContainerStatus_rebootbackend_2fcontainer_5fstop_2eproto.base);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

ContainerStatus::~ContainerStatus() {
  // @@protoc_insertion_point(destructor:ContainerStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ContainerStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ContainerStatus::ArenaDtor(void* object) {
  ContainerStatus* _this = reinterpret_cast< ContainerStatus* >(object);
  (void)_this;
}
void ContainerStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ContainerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContainerStatus& ContainerStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ContainerStatus_rebootbackend_2fcontainer_5fstop_2eproto.base);
  return *internal_default_instance();
}


void ContainerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ContainerStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_message_.ClearNonDefaultToEmpty();
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ContainerStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ShutdownStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::ShutdownStatus>(val));
        } else goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ContainerStatus.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ContainerStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ContainerStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ShutdownStatus status = 1;
  if (_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // string error_message = 2;
  if (_internal_has_error_message()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ContainerStatus.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ContainerStatus)
  return target;
}

size_t ContainerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ContainerStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // string error_message = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error_message());
    }

    // .ShutdownStatus status = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContainerStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ContainerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ContainerStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ContainerStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ContainerStatus)
    MergeFrom(*source);
  }
}

void ContainerStatus::MergeFrom(const ContainerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ContainerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_error_message(from._internal_error_message());
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ContainerStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ContainerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStatus::CopyFrom(const ContainerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ContainerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStatus::IsInitialized() const {
  return true;
}

void ContainerStatus::InternalSwap(ContainerStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ContainerStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopContainersStatusRequest::InitAsDefaultInstance() {
}
class StopContainersStatusRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<StopContainersStatusRequest>()._has_bits_);
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StopContainersStatusRequest::StopContainersStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StopContainersStatusRequest)
}
StopContainersStatusRequest::StopContainersStatusRequest(const StopContainersStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_request_id()) {
    request_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_request_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StopContainersStatusRequest)
}

void StopContainersStatusRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopContainersStatusRequest_rebootbackend_2fcontainer_5fstop_2eproto.base);
  request_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopContainersStatusRequest::~StopContainersStatusRequest() {
  // @@protoc_insertion_point(destructor:StopContainersStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopContainersStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  request_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopContainersStatusRequest::ArenaDtor(void* object) {
  StopContainersStatusRequest* _this = reinterpret_cast< StopContainersStatusRequest* >(object);
  (void)_this;
}
void StopContainersStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopContainersStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopContainersStatusRequest& StopContainersStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopContainersStatusRequest_rebootbackend_2fcontainer_5fstop_2eproto.base);
  return *internal_default_instance();
}


void StopContainersStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StopContainersStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    request_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopContainersStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StopContainersStatusRequest.request_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopContainersStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StopContainersStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (_internal_has_request_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StopContainersStatusRequest.request_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StopContainersStatusRequest)
  return target;
}

size_t StopContainersStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StopContainersStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopContainersStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StopContainersStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopContainersStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopContainersStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StopContainersStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StopContainersStatusRequest)
    MergeFrom(*source);
  }
}

void StopContainersStatusRequest::MergeFrom(const StopContainersStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StopContainersStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_request_id()) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void StopContainersStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StopContainersStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopContainersStatusRequest::CopyFrom(const StopContainersStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StopContainersStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopContainersStatusRequest::IsInitialized() const {
  return true;
}

void StopContainersStatusRequest::InternalSwap(StopContainersStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  request_id_.Swap(&other->request_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopContainersStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

StopContainersResponse_ContainerStatusEntry_DoNotUse::StopContainersResponse_ContainerStatusEntry_DoNotUse() {}
StopContainersResponse_ContainerStatusEntry_DoNotUse::StopContainersResponse_ContainerStatusEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void StopContainersResponse_ContainerStatusEntry_DoNotUse::MergeFrom(const StopContainersResponse_ContainerStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata StopContainersResponse_ContainerStatusEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void StopContainersResponse_ContainerStatusEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void StopContainersResponse::InitAsDefaultInstance() {
}
class StopContainersResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StopContainersResponse>()._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_error_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

StopContainersResponse::StopContainersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  container_status_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StopContainersResponse)
}
StopContainersResponse::StopContainersResponse(const StopContainersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  container_status_.MergeFrom(from.container_status_);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_error_message()) {
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_message(),
      GetArena());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:StopContainersResponse)
}

void StopContainersResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopContainersResponse_rebootbackend_2fcontainer_5fstop_2eproto.base);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

StopContainersResponse::~StopContainersResponse() {
  // @@protoc_insertion_point(destructor:StopContainersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopContainersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopContainersResponse::ArenaDtor(void* object) {
  StopContainersResponse* _this = reinterpret_cast< StopContainersResponse* >(object);
  (void)_this;
}
void StopContainersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopContainersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopContainersResponse& StopContainersResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopContainersResponse_rebootbackend_2fcontainer_5fstop_2eproto.base);
  return *internal_default_instance();
}


void StopContainersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StopContainersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_status_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_message_.ClearNonDefaultToEmpty();
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopContainersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ShutdownStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::ShutdownStatus>(val));
        } else goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StopContainersResponse.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .ContainerStatus> container_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&container_status_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopContainersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StopContainersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ShutdownStatus status = 1;
  if (_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // string error_message = 2;
  if (_internal_has_error_message()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StopContainersResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // map<string, .ContainerStatus> container_status = 3;
  if (!this->_internal_container_status().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ContainerStatus >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "StopContainersResponse.ContainerStatusEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_container_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_container_status().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ContainerStatus >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ContainerStatus >::const_iterator
          it = this->_internal_container_status().begin();
          it != this->_internal_container_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = StopContainersResponse_ContainerStatusEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ContainerStatus >::const_iterator
          it = this->_internal_container_status().begin();
          it != this->_internal_container_status().end(); ++it) {
        target = StopContainersResponse_ContainerStatusEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StopContainersResponse)
  return target;
}

size_t StopContainersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StopContainersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .ContainerStatus> container_status = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_container_status_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ContainerStatus >::const_iterator
      it = this->_internal_container_status().begin();
      it != this->_internal_container_status().end(); ++it) {
    total_size += StopContainersResponse_ContainerStatusEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // string error_message = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error_message());
    }

    // .ShutdownStatus status = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopContainersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StopContainersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopContainersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopContainersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StopContainersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StopContainersResponse)
    MergeFrom(*source);
  }
}

void StopContainersResponse::MergeFrom(const StopContainersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StopContainersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  container_status_.MergeFrom(from.container_status_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_error_message(from._internal_error_message());
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StopContainersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StopContainersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopContainersResponse::CopyFrom(const StopContainersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StopContainersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopContainersResponse::IsInitialized() const {
  return true;
}

void StopContainersResponse::InternalSwap(StopContainersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  container_status_.Swap(&other->container_status_);
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopContainersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::StopContainersRequest* Arena::CreateMaybeMessage< ::StopContainersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StopContainersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ContainerStatus* Arena::CreateMaybeMessage< ::ContainerStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ContainerStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::StopContainersStatusRequest* Arena::CreateMaybeMessage< ::StopContainersStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StopContainersStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::StopContainersResponse_ContainerStatusEntry_DoNotUse* Arena::CreateMaybeMessage< ::StopContainersResponse_ContainerStatusEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StopContainersResponse_ContainerStatusEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::StopContainersResponse* Arena::CreateMaybeMessage< ::StopContainersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StopContainersResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
