# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: types.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import gogo_pb2 as gogo__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2

from gogo_pb2 import *

DESCRIPTOR = _descriptor.FileDescriptor(
  name='types.proto',
  package='types',
  syntax='proto3',
  serialized_options=b'Z\003pds',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0btypes.proto\x12\x05types\x1a\ngogo.proto\x1a\x19google/protobuf/any.proto\"\x07\n\x05\x45mpty\"\x10\n\x02Id\x12\n\n\x02Id\x18\x01 \x01(\x0c\"h\n\tIPAddress\x12+\n\x02\x41\x66\x18\x01 \x01(\x0e\x32\x0b.types.IPAFB\x12\xf2\xde\x1f\x0emeta:mandatory\x12\x10\n\x06V4Addr\x18\x02 \x01(\x07H\x00\x12\x10\n\x06V6Addr\x18\x03 \x01(\x0cH\x00\x42\n\n\x08v4_or_v6\"M\n\x08IPPrefix\x12\x1e\n\x04\x41\x64\x64r\x18\x01 \x01(\x0b\x32\x10.types.IPAddress\x12!\n\x03Len\x18\x02 \x01(\rB\x14\xf2\xde\x1f\x10meta:range=0-128\"H\n\x07IPRange\x12\x1d\n\x03Low\x18\x01 \x01(\x0b\x32\x10.types.IPAddress\x12\x1e\n\x04High\x18\x02 \x01(\x0b\x32\x10.types.IPAddress\"\x8a\x01\n\x07IPEntry\x12!\n\x06Prefix\x18\x01 \x01(\x0b\x32\x0f.types.IPPrefixH\x00\x12$\n\x05Range\x18\x02 \x01(\x0b\x32\x13.types.AddressRangeH\x00\x12*\n\x03Tag\x18\x03 \x01(\rB\x1b\xf2\xde\x1f\x17meta:range:1-4294967294H\x00\x42\n\n\x08ip_entry\")\n\x06IPList\x12\x1f\n\x07IPEntry\x18\x01 \x03(\x0b\x32\x0e.types.IPEntry\"<\n\nIPv4Prefix\x12\x0c\n\x04\x41\x64\x64r\x18\x01 \x01(\x07\x12 \n\x03Len\x18\x02 \x01(\rB\x13\xf2\xde\x1f\x0fmeta:range=0-32\"=\n\nIPv6Prefix\x12\x0c\n\x04\x41\x64\x64r\x18\x01 \x01(\x0c\x12!\n\x03Len\x18\x02 \x01(\rB\x14\xf2\xde\x1f\x10meta:range=0-128\"b\n\x08IPSubnet\x12%\n\nIPv4Subnet\x18\x01 \x01(\x0b\x32\x0f.types.IPPrefixH\x00\x12%\n\nIPv6Subnet\x18\x02 \x01(\x0b\x32\x0f.types.IPPrefixH\x00\x42\x08\n\x06subnet\"a\n\x0c\x41\x64\x64ressRange\x12#\n\tIPv4Range\x18\x01 \x01(\x0b\x32\x0e.types.IPRangeH\x00\x12#\n\tIPv6Range\x18\x02 \x01(\x0b\x32\x0e.types.IPRangeH\x00\x42\x07\n\x05range\"]\n\x07\x41\x64\x64ress\x12!\n\x06Prefix\x18\x01 \x01(\x0b\x32\x0f.types.IPSubnetH\x00\x12$\n\x05Range\x18\x02 \x01(\x0b\x32\x13.types.AddressRangeH\x00\x42\t\n\x07\x61\x64\x64ress\"^\n\tPortRange\x12\'\n\x07PortLow\x18\x01 \x01(\rB\x16\xf2\xde\x1f\x12meta:range:0-65535\x12(\n\x08PortHigh\x18\x02 \x01(\rB\x16\xf2\xde\x1f\x12meta:range:0-65535\"\xba\x03\n\x0bRuleL3Match\x12\x12\n\x08ProtoNum\x18\x01 \x01(\rH\x00\x12-\n\rProtoWildcard\x18\x02 \x01(\x0e\x32\x14.types.WildcardMatchH\x00\x12$\n\tSrcPrefix\x18\x03 \x01(\x0b\x32\x0f.types.IPPrefixH\x01\x12\'\n\x08SrcRange\x18\x04 \x01(\x0b\x32\x13.types.AddressRangeH\x01\x12-\n\x06SrcTag\x18\x05 \x01(\rB\x1b\xf2\xde\x1f\x17meta:range:1-4294967294H\x01\x12\"\n\tSrcIPList\x18\x06 \x01(\x0b\x32\r.types.IPListH\x01\x12$\n\tDstPrefix\x18\x07 \x01(\x0b\x32\x0f.types.IPPrefixH\x02\x12\'\n\x08\x44stRange\x18\x08 \x01(\x0b\x32\x13.types.AddressRangeH\x02\x12-\n\x06\x44stTag\x18\t \x01(\rB\x1b\xf2\xde\x1f\x17meta:range:1-4294967294H\x02\x12\"\n\tDstIPList\x18\n \x01(\x0b\x32\r.types.IPListH\x02\x42\x0c\n\nprotomatchB\n\n\x08srcmatchB\n\n\x08\x64stmatch\"[\n\tPortMatch\x12&\n\x0cSrcPortRange\x18\x01 \x01(\x0b\x32\x10.types.PortRange\x12&\n\x0c\x44stPortRange\x18\x02 \x01(\x0b\x32\x10.types.PortRange\"\xd9\x01\n\tICMPMatch\x12\x18\n\x04Type\x18\x01 \x01(\rB\x08\xea\xde\x1f\x04TypeH\x00\x12>\n\x0cTypeWildcard\x18\x02 \x01(\x0e\x32\x14.types.WildcardMatchB\x10\xea\xde\x1f\x0cTypeWildcardH\x00\x12\x18\n\x04\x43ode\x18\x03 \x01(\rB\x08\xea\xde\x1f\x04\x43odeH\x01\x12>\n\x0c\x43odeWildcard\x18\x04 \x01(\x0e\x32\x14.types.WildcardMatchB\x10\xea\xde\x1f\x0c\x43odeWildcardH\x01\x42\x0b\n\ttypematchB\x0b\n\tcodematch\"_\n\rPortListMatch\x12&\n\x0cSrcPortRange\x18\x01 \x03(\x0b\x32\x10.types.PortRange\x12&\n\x0c\x44stPortRange\x18\x02 \x03(\x0b\x32\x10.types.PortRange\"8\n\rICMPMatchList\x12\'\n\rICMPMatchList\x18\x01 \x03(\x0b\x32\x10.types.ICMPMatch\"\xb9\x01\n\x0bRuleL4Match\x12!\n\x05Ports\x18\x01 \x01(\x0b\x32\x10.types.PortMatchH\x00\x12$\n\x08TypeCode\x18\x02 \x01(\x0b\x32\x10.types.ICMPMatchH\x00\x12(\n\x08PortList\x18\x03 \x01(\x0b\x32\x14.types.PortListMatchH\x00\x12-\n\rICMPMatchList\x18\x04 \x01(\x0b\x32\x14.types.ICMPMatchListH\x00\x42\x08\n\x06l4info\"U\n\tRuleMatch\x12#\n\x07L3Match\x18\x01 \x01(\x0b\x32\x12.types.RuleL3Match\x12#\n\x07L4Match\x18\x02 \x01(\x0b\x32\x12.types.RuleL4Match\"J\n\x04QinQ\x12 \n\x04STag\x18\x01 \x01(\rB\x12\xf2\xde\x1f\x0emeta:mandatory\x12 \n\x04\x43Tag\x18\x02 \x01(\rB\x12\xf2\xde\x1f\x0emeta:mandatory\"s\n\x08\x45ncapVal\x12\x10\n\x06VlanId\x18\x01 \x01(\rH\x00\x12\x11\n\x07MPLSTag\x18\x02 \x01(\rH\x00\x12\x0e\n\x04Vnid\x18\x03 \x01(\rH\x00\x12\x1b\n\x04QinQ\x18\x04 \x01(\x0b\x32\x0b.types.QinQH\x00\x12\x0e\n\x04Vsid\x18\x05 \x01(\rH\x00\x42\x05\n\x03val\"G\n\x05\x45ncap\x12\x1e\n\x04Type\x18\x01 \x01(\x0e\x32\x10.types.EncapType\x12\x1e\n\x05Value\x18\x02 \x01(\x0b\x32\x0f.types.EncapVal\" \n\tBatchCtxt\x12\x13\n\x0b\x42\x61tchCookie\x18\x01 \x01(\x04\"O\n\nMACFlowKey\x12\x0e\n\x06Subnet\x18\x01 \x01(\x0c\x12\x0e\n\x06SrcMAC\x18\x02 \x01(\x04\x12\x0e\n\x06\x44stMAC\x18\x03 \x01(\x04\x12\x11\n\tEtherType\x18\x04 \x01(\r\"\xdf\x01\n\nFlowL4Info\x12\x32\n\nTcpUdpInfo\x18\x01 \x01(\x0b\x32\x1c.types.FlowL4Info.TCPUDPInfoH\x00\x12.\n\x08IcmpInfo\x18\x02 \x01(\x0b\x32\x1a.types.FlowL4Info.ICMPInfoH\x00\x1a.\n\nTCPUDPInfo\x12\x0f\n\x07SrcPort\x18\x01 \x01(\r\x12\x0f\n\x07\x44stPort\x18\x02 \x01(\r\x1a\x32\n\x08ICMPInfo\x12\x0c\n\x04Type\x18\x01 \x01(\r\x12\x0c\n\x04\x43ode\x18\x02 \x01(\r\x12\n\n\x02Id\x18\x03 \x01(\rB\t\n\x07l4_info\"\x93\x01\n\tIPFlowKey\x12\r\n\x05VPCId\x18\x01 \x01(\x0c\x12\x1f\n\x05SrcIP\x18\x02 \x01(\x0b\x32\x10.types.IPAddress\x12\x1f\n\x05\x44stIP\x18\x03 \x01(\x0b\x32\x10.types.IPAddress\x12\x12\n\nIPProtocol\x18\x04 \x01(\r\x12!\n\x06L4Info\x18\x05 \x01(\x0b\x32\x11.types.FlowL4Info\"`\n\x07\x46lowKey\x12%\n\tIPFlowKey\x18\x01 \x01(\x0b\x32\x10.types.IPFlowKeyH\x00\x12\'\n\nMACFlowKey\x18\x02 \x01(\x0b\x32\x11.types.MACFlowKeyH\x00\x42\x05\n\x03key\"\xe3\x01\n\x0eSvcRewriteInfo\x12\x36\n\tSrcPrefix\x18\x01 \x01(\x0b\x32\x0f.types.IPPrefixB\x12\xf2\xde\x1f\x0emeta:mandatory\x12\x36\n\tDstPrefix\x18\x02 \x01(\x0b\x32\x0f.types.IPPrefixB\x12\xf2\xde\x1f\x0emeta:mandatory\x12\"\n\x08\x44stNatIP\x18\x03 \x01(\x0b\x32\x10.types.IPAddress\x12\x12\n\nSvcPortMap\x18\x04 \x01(\x0c\x12\x11\n\tVNFTunnel\x18\x05 \x01(\x0c\x12\x16\n\x0eUnderlaySrcNat\x18\x06 \x01(\x08\"\r\n\x0b\x44ropNexthop\"\x9a\x01\n\x0b\x46lowLogSpec\x12+\n\x0bLogOnCreate\x18\x01 \x01(\x08\x42\x16\xf2\xde\x1f\x12meta:default=false\x12+\n\x0bLogOnDelete\x18\x02 \x01(\x08\x42\x16\xf2\xde\x1f\x12meta:default=false\x12\x31\n\x11LogLongLivedFlows\x18\x03 \x01(\x08\x42\x16\xf2\xde\x1f\x12meta:default=false\"\x93\x01\n\x0bLearnSource\x12)\n\nArpLearnEn\x18\x01 \x01(\x08\x42\x15\xf2\xde\x1f\x11meta:default=true\x12*\n\x0b\x44hcpLearnEn\x18\x02 \x01(\x08\x42\x15\xf2\xde\x1f\x11meta:default=true\x12-\n\x0e\x44\x61taPktLearnEn\x18\x03 \x01(\x08\x42\x15\xf2\xde\x1f\x11meta:default=true\"\xde\x01\n\tLearnSpec\x12\x45\n\tLearnMode\x18\x01 \x01(\x0e\x32\x10.types.LearnModeB \xf2\xde\x1f\x1cmeta:default=LEARN_MODE_NONE\x12\x41\n\x0fLearnAgeTimeout\x18\x02 \x01(\rB(\xf2\xde\x1f$meta:range:30-86400,meta:default=300\x12G\n\x0bLearnSource\x18\x03 \x01(\x0b\x32\x12.types.LearnSourceB\x1e\xf2\xde\x1f\x1aLearnMode!=LEARN_MODE_NONE\"k\n\x15ServiceRequestMessage\x12)\n\x08\x43onfigOp\x18\x01 \x01(\x0e\x32\x17.types.ServiceRequestOp\x12\'\n\tConfigMsg\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any\"e\n\x16ServiceResponseMessage\x12#\n\tApiStatus\x18\x01 \x01(\x0e\x32\x10.types.ApiStatus\x12&\n\x08Response\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any\";\n\x07\x43ounter\x12\x16\n\x04Name\x18\x01 \x01(\tB\x08\xea\xde\x1f\x04Name\x12\x18\n\x05Value\x18\x02 \x01(\x04\x42\t\xea\xde\x1f\x05Value\"|\n\x0c\x42GPCommunity\x12\x32\n\x03\x41sn\x18\x01 \x01(\rB%\xf2\xde\x1f!meta:range:0-65535,meta:default=0\x12\x38\n\tCommunity\x18\x02 \x01(\rB%\xf2\xde\x1f!meta:range:0-65535,meta:default=0\"\xc7\x01\n\tNATAction\x12&\n\x0cSrcNatAction\x18\x01 \x01(\x0e\x32\x10.types.NatAction\x12\"\n\x08\x44stNatIP\x18\x02 \x01(\x0b\x32\x10.types.IPAddress\x12n\n\tPortReuse\x18\x03 \x01(\x08\x42[\xf2\xde\x1fWmeta:constraints=SrcNatAction==NAT_ACTION_NAPT_PUBLIC|SrcNatAction==NAT_ACTION_NAPT_SVC*\x9d\x03\n\tApiStatus\x12\x11\n\rAPI_STATUS_OK\x10\x00\x12\x12\n\x0e\x41PI_STATUS_ERR\x10\x01\x12\x1a\n\x16\x41PI_STATUS_INVALID_ARG\x10\x02\x12\x1d\n\x19\x41PI_STATUS_EXISTS_ALREADY\x10\x03\x12\x19\n\x15\x41PI_STATUS_OUT_OF_MEM\x10\x04\x12\x18\n\x14\x41PI_STATUS_NOT_FOUND\x10\x05\x12\x1e\n\x1a\x41PI_STATUS_OUT_OF_RESOURCE\x10\x06\x12\x14\n\x10\x41PI_STATUS_RETRY\x10\x07\x12$\n API_STATUS_OPERATION_NOT_ALLOWED\x10\x08\x12\x16\n\x12\x41PI_STATUS_TIMEOUT\x10\t\x12\x1e\n\x1a\x41PI_STATUS_HW_ENTRY_EXISTS\x10\n\x12&\n\"API_STATUS_OPERATION_NOT_SUPPORTED\x10\x0b\x12\x15\n\x11\x41PI_STATUS_IN_USE\x10\x0c\x12&\n\"API_STATUS_OPERATION_NOT_PROCESSED\x10\r*\xb3@\n\tErrorCode\x12\x11\n\rERR_CODE_NONE\x10\x00\x12\x1e\n\x1a\x45RR_CODE_RPC_LOAD_EXCEEDED\x10\x01\x12*\n&ERR_CODE_IPV4_INGRESS_POLICY_NOT_FOUND\x10\x02\x12*\n&ERR_CODE_IPV6_INGRESS_POLICY_NOT_FOUND\x10\x03\x12)\n%ERR_CODE_IPV4_EGRESS_POLICY_NOT_FOUND\x10\x04\x12)\n%ERR_CODE_IPV6_EGRESS_POLICY_NOT_FOUND\x10\x05\x12\x1d\n\x19\x45RR_CODE_REGION_NOT_FOUND\x10\x06\x12\'\n#ERR_CODE_IPV4_ROUTE_TABLE_NOT_FOUND\x10\x07\x12\'\n#ERR_CODE_IPV6_ROUTE_TABLE_NOT_FOUND\x10\x08\x12(\n$ERR_CODE_IPV4_METER_POLICY_NOT_FOUND\x10\t\x12(\n$ERR_CODE_IPV6_METER_POLICY_NOT_FOUND\x10\n\x12)\n%ERR_CODE_INGRESS_NAT_POLICY_NOT_FOUND\x10\x0b\x12(\n$ERR_CODE_EGRESS_NAT_POLICY_NOT_FOUND\x10\x0c\x12\x1d\n\x19\x45RR_CODE_DEVICE_NOT_FOUND\x10\r\x12\x1a\n\x16\x45RR_CODE_VPC_NOT_FOUND\x10\x0e\x12\x19\n\x15\x45RR_CODE_IF_NOT_FOUND\x10\x0f\x12\x1a\n\x16\x45RR_CODE_VNI_NOT_FOUND\x10\x10\x12\x1d\n\x19\x45RR_CODE_TUNNEL_NOT_FOUND\x10\x11\x12\x1a\n\x16\x45RR_CODE_LIF_NOT_FOUND\x10\x12\x12\x1b\n\x17\x45RR_CODE_VNIC_NOT_FOUND\x10\x13\x12\x1e\n\x1a\x45RR_CODE_NEXTHOP_NOT_FOUND\x10\x14\x12$\n ERR_CODE_NEXTHOP_GROUP_NOT_FOUND\x10\x15\x12\x1c\n\x18\x45RR_CODE_IF_TYPE_INVALID\x10\x16\x12 \n\x1c\x45RR_CODE_VPC_UPD_NOT_ALLOWED\x10\x17\x12)\n%ERR_CODE_ACCESS_ENCAP_UPD_NOT_ALLOWED\x10\x18\x12)\n%ERR_CODE_FABRIC_ENCAP_UPD_NOT_ALLOWED\x10\x19\x12+\n\'ERR_CODE_DEFAULT_POLICY_UPD_NOT_ALLOWED\x10\x1a\x12*\n&ERR_CODE_REMOTE_SUBNET_UPD_NOT_ALLOWED\x10\x1b\x12#\n\x1f\x45RR_CODE_REGION_UPD_NOT_ALLOWED\x10\x1c\x12\x1c\n\x18\x45RR_CODE_INVALID_IP_ADDR\x10\x1d\x12\"\n\x1e\x45RR_CODE_IF_TYPE_NOT_SUPPORTED\x10\x1e\x12#\n\x1f\x45RR_CODE_LIF_TYPE_NOT_SUPPORTED\x10\x1f\x12\"\n\x1e\x45RR_CODE_ROUTE_TABLE_NOT_FOUND\x10 \x12\x1c\n\x18\x45RR_CODE_ROUTE_NOT_FOUND\x10!\x12\"\n\x1e\x45RR_CODE_SVC_PORTMAP_NOT_FOUND\x10\"\x12\'\n#ERR_CODE_NEXTHOP_TYPE_NOT_SUPPORTED\x10#\x12\'\n#ERR_CODE_IP_ADDRESS_FAMILY_MISMATCH\x10$\x12 \n\x1c\x45RR_CODE_IP_PROTOCOL_INVALID\x10%\x12\"\n\x1e\x45RR_CODE_L4_PORTS_NOT_EXPECTED\x10&\x12\"\n\x1e\x45RR_CODE_L4_PORT_RANGE_INVALID\x10\'\x12\'\n#ERR_CODE_ICMP_TYPECODE_NOT_EXPECTED\x10(\x12&\n\"ERR_CODE_IP_ADDRESS_FAMILY_INVALID\x10)\x12\x38\n4ERR_CODE_SVC_REWRITE_IP_ADDRESS_FAMILY_NOT_SUPPORTED\x10*\x12\"\n\x1e\x45RR_CODE_RULE_L3_MATCH_INVALID\x10+\x12\"\n\x1e\x45RR_CODE_RULE_L4_MATCH_INVALID\x10,\x12-\n)ERR_CODE_MAX_IPV4_INGRESS_POLICY_EXCEEDED\x10-\x12-\n)ERR_CODE_MAX_IPV6_INGRESS_POLICY_EXCEEDED\x10.\x12,\n(ERR_CODE_MAX_IPV4_EGRESS_POLICY_EXCEEDED\x10/\x12,\n(ERR_CODE_MAX_IPV6_EGRESS_POLICY_EXCEEDED\x10\x30\x12,\n(ERR_CODE_MAX_INGRESS_NAT_POLICY_EXCEEDED\x10\x31\x12+\n\'ERR_CODE_MAX_EGRESS_NAT_POLICY_EXCEEDED\x10\x32\x12+\n\'ERR_CODE_MAX_TX_MIRROR_SESSION_EXCEEDED\x10\x33\x12+\n\'ERR_CODE_MAX_RX_MIRROR_SESSION_EXCEEDED\x10\x34\x12\x1d\n\x19\x45RR_CODE_SUBNET_NOT_FOUND\x10\x35\x12(\n$ERR_CODE_TX_MIRROR_SESSION_NOT_FOUND\x10\x36\x12(\n$ERR_CODE_RX_MIRROR_SESSION_NOT_FOUND\x10\x37\x12!\n\x1d\x45RR_CODE_TX_POLICER_NOT_FOUND\x10\x38\x12!\n\x1d\x45RR_CODE_RX_POLICER_NOT_FOUND\x10\x39\x12\x1e\n\x1a\x45RR_CODE_HOST_IF_NOT_FOUND\x10:\x12(\n$ERR_CODE_MAC_ADDRESS_UPD_NOT_ALLOWED\x10;\x12)\n%ERR_CODE_NEXTHOP_TYPE_UPD_NOT_ALLOWED\x10<\x12*\n&ERR_CODE_MAX_IPSEC_DECRYPT_SA_EXCEEDED\x10=\x12%\n!ERR_CODE_ENCAP_TYPE_NOT_SUPPORTED\x10>\x12 \n\x1c\x45RR_CODE_DOT1Q_VALUE_INVALID\x10?\x12#\n\x1f\x45RR_CODE_TCP_FLAGS_NOT_EXPECTED\x10@\x12\x1e\n\x1a\x45RR_CODE_MAX_TAGS_EXCEEDED\x10\x41\x12*\n&ERR_CODE_SECONDARY_KEY_UPD_NOT_ALLOWED\x10\x42\x12!\n\x1d\x45RR_CODE_VNF_TUNNEL_NOT_FOUND\x10\x43\x12\"\n\x1e\x45RR_CODE_SECONDARY_KEY_MISSING\x10\x44\x12#\n\x1f\x45RR_CODE_DST_TYPE_NOT_SUPPORTED\x10\x45\x12+\n\'ERR_CODE_MAX_FLOWMON_COLLECTOR_EXCEEDED\x10\x46\x12$\n ERR_CODE_FLOW_LOG_CONFIG_INVALID\x10G\x12%\n!ERR_CODE_MAX_TRUSTED_VNI_EXCEEDED\x10H\x12,\n(ERR_CODE_MAX_SYSTEM_NAME_LENGTH_EXCEEDED\x10I\x12\'\n#ERR_CODE_MAX_BGP_COMMUNITY_EXCEEDED\x10J\x12 \n\x1c\x45RR_CODE_MAX_HA_VIP_EXCEEDED\x10K\x12\x1e\n\x1a\x45RR_CODE_HA_VIP_ID_INVALID\x10L\x12 \n\x1c\x45RR_CODE_DSS_HA_ROLE_INVALID\x10M\x12\'\n#ERR_CODE_HA_HEARTBEAT_COUNT_INVALID\x10N\x12\x1b\n\x17\x45RR_CODE_TUNNEL_INVALID\x10O\x12-\n)ERR_CODE_HEALTH_PROBE_MAC_ADDRESS_INVALID\x10P\x12\x1d\n\x19\x45RR_CODE_POLICY_NOT_FOUND\x10Q\x12#\n\x1f\x45RR_CODE_METER_POLICY_NOT_FOUND\x10R\x12\'\n\"ERR_CODE_POLICY_MAX_RULES_EXCEEDED\x10\x80 \x12#\n\x1e\x45RR_CODE_RULE_MAX_ALG_EXCEEDED\x10\x81 \x12*\n%ERR_CODE_RULE_WITHOUT_MATCH_CONDITION\x10\x82 \x12-\n(ERR_CODE_RULE_WITHOUT_L3_MATCH_CONDITION\x10\x83 \x12!\n\x1c\x45RR_CODE_RULE_ACTION_INVALID\x10\x84 \x12#\n\x1e\x45RR_CODE_RULE_PRIORITY_INVALID\x10\x85 \x12&\n!ERR_CODE_VPC_TYPE_UPD_NOT_ALLOWED\x10\x80!\x12*\n%ERR_CODE_VPC_LOCAL_VPC_IN_USE_BY_VNIC\x10\x81!\x12\"\n\x1d\x45RR_CODE_VPC_IN_USE_BY_SUBNET\x10\x82!\x12\'\n\"ERR_CODE_VPC_IN_USE_BY_SVC_MAPPING\x10\x83!\x12$\n\x1f\x45RR_CODE_VPC_IN_USE_BY_VPC_PEER\x10\x84!\x12#\n\x1e\x45RR_CODE_VPC_IN_USE_BY_MAPPING\x10\x85!\x12#\n\x1e\x45RR_CODE_VPC_PEER_VPC1_NOT_SET\x10\x86!\x12(\n#ERR_CODE_VPC_PEER_VPC2_INFO_NOT_SET\x10\x87!\x12+\n&ERR_CODE_VPC_REGION_CONFIG_NOT_ALLOWED\x10\x88!\x12\"\n\x1d\x45RR_CODE_VPC_IN_USE_BY_TUNNEL\x10\x89!\x12)\n$ERR_CODE_TUNNEL_TYPE_UPD_NOT_ALLOWED\x10\x80\"\x12.\n)ERR_CODE_TUNNEL_REMOTE_IP_UPD_NOT_ALLOWED\x10\x81\"\x12#\n\x1e\x45RR_CODE_TUNNEL_IN_USE_BY_VNIC\x10\x82\"\x12-\n(ERR_CODE_TUNNEL_LOCAL_IP_UPD_NOT_ALLOWED\x10\x83\"\x12&\n!ERR_CODE_TUNNEL_REMOTE_IP_INVALID\x10\x84\"\x12)\n$ERR_CODE_POLICER_DIR_UPD_NOT_ALLOWED\x10\x80#\x12#\n\x1e\x45RR_CODE_SUBNET_IN_USE_BY_VNIC\x10\x80$\x12-\n(ERR_CODE_SUBNET_MAX_DHCP_POLICY_EXCEEDED\x10\x81$\x12)\n$ERR_CODE_SUBNET_MAX_HOST_IF_EXCEEDED\x10\x82$\x12\x30\n+ERR_CODE_REGION_LOCAL_REGION_ID_NOT_ALLOWED\x10\x80%\x12\x32\n-ERR_CODE_REGION_EMPTY_PREFIX_LIST_NOT_ALLOWED\x10\x81%\x12\'\n\"ERR_CODE_MIRROR_SNAP_LEN_BELOW_MIN\x10\x80&\x12(\n#ERR_CODE_MIRROR_LSPAN_PPS_ABOVE_MAX\x10\x81&\x12/\n*ERR_CODE_MIRROR_SESSION_TYPE_NOT_SUPPORTED\x10\x82&\x12 \n\x1b\x45RR_CODE_MIRROR_RULE_EXISTS\x10\x83&\x12&\n!ERR_CODE_MIRROR_SESSION_NOT_FOUND\x10\x84&\x12)\n$ERR_CODE_MIRROR_INVALID_COLLECTOR_IP\x10\x85&\x12-\n(ERR_CODE_MIRROR_ERSPAN_COLLECTOR_INVALID\x10\x86&\x12+\n&ERR_CODE_MIRROR_ERSPAN_SPAN_ID_INVALID\x10\x87&\x12\x39\n4ERR_CODE_ERSPAN_CONFIG_INCONSISTENT_WITH_ERSPAN_TYPE\x10\x88&\x12*\n%ERR_CODE_MIRROR_SNAP_LEN_OUT_OF_RANGE\x10\x89&\x12.\n)ERR_CODE_MIRROR_SESSION_EMPTY_DESTINATION\x10\x8a&\x12)\n$ERR_CODE_RULE_WITHOUT_MIRROR_SESSION\x10\x8b&\x12.\n)ERR_CODE_RULE_MAX_MIRROR_SESSION_EXCEEDED\x10\x8c&\x12/\n*ERR_CODE_ROUTE_CLASS_PRIORITY_MAX_EXCEEDED\x10\x80\'\x12+\n&ERR_CODE_ROUTE_MAX_IP_NEXTHOP_EXCEEDED\x10\x81\'\x12\x30\n+ERR_CODE_ROUTE_EMPTY_IP_NEXTHOP_NOT_ALLOWED\x10\x82\'\x12\x33\n.ERR_CODE_OVERLAY_NEXTHOP_IP_MAC_COUNT_MISMATCH\x10\x83\'\x12!\n\x1c\x45RR_CODE_ROUTE_TABLE_TOO_BIG\x10\x84\'\x12,\n\'ERR_CODE_VNIC_IN_REMOTE_VPC_NOT_ALLOWED\x10\x80)\x12(\n#ERR_CODE_VNIC_ENCAP_UPD_NOT_ALLOWED\x10\x81)\x12%\n ERR_CODE_VNIC_ENCAP_TYPE_INVALID\x10\x82)\x12\x36\n1ERR_CODE_VNIC_IP_MAC_BINDING_CHECKS_NOT_SUPPORTED\x10\x83)\x12$\n\x1f\x45RR_CODE_VNIC_HA_VIP_ID_NOT_SET\x10\x84)\x12#\n\x1e\x45RR_CODE_VNIC_HA_OWNER_NOT_SET\x10\x85)\x12*\n%ERR_CODE_VNIC_PRIMARY_UPD_NOT_ALLOWED\x10\x86)\x12-\n(ERR_CODE_VNIC_PUBLIC_MAC_UPD_NOT_ALLOWED\x10\x87)\x12)\n$ERR_CODE_VNIC_VIP_ID_UPD_NOT_ALLOWED\x10\x88)\x12+\n&ERR_CODE_VNIC_HA_OWNER_UPD_NOT_ALLOWED\x10\x89)\x12/\n*ERR_CODE_VNIC_PRIMARY_VNIC_UPD_NOT_ALLOWED\x10\x8a)\x12)\n$ERR_CODE_VNIC_SUBNET_UPD_NOT_ALLOWED\x10\x8b)\x12)\n$ERR_CODE_VNIC_TUNNEL_UPD_NOT_ALLOWED\x10\x8c)\x12&\n!ERR_CODE_VNIC_VPC_UPD_NOT_ALLOWED\x10\x8d)\x12%\n ERR_CODE_VNIC_SUBNET_VPC_MISSING\x10\x8e)\x12\x30\n+ERR_CODE_VNIC_FLOATING_VNIC_UPD_NOT_ALLOWED\x10\x8f)\x12;\n6ERR_CODE_VNIC_FLOATING_VNIC_PLS_SRC_NAT_POOL_NOT_FOUND\x10\x90)\x12(\n#ERR_CODE_DEVICE_HA_MAX_VIP_EXCEEDED\x10\x80*\x12\x30\n+ERR_CODE_DEVICE_HA_PREEMPTION_NOT_SUPPORTED\x10\x81*\x12\x34\n/ERR_CODE_DEVICE_HA_FLOW_RECONCILE_NOT_SUPPORTED\x10\x82*\x12,\n\'ERR_CODE_DEVICE_HA_MODE_UPD_NOT_ALLOWED\x10\x83*\x12.\n)ERR_CODE_DEVICE_HA_VIP_ID_UPD_NOT_ALLOWED\x10\x84*\x12\x36\n1ERR_CODE_DEVICE_HA_VIP_IP_ADDRESS_UPD_NOT_ALLOWED\x10\x85*\x12\x30\n+ERR_CODE_DEVICE_TRUSTED_VNI_UPD_NOT_ALLOWED\x10\x86*\x12;\n6ERR_CODE_DEVICE_FW_ACTION_XPOSN_SCHEME_UPD_NOT_ALLOWED\x10\x87*\x12(\n#ERR_CODE_DEVICE_CONF_PERSIST_FAILED\x10\x88*\x12\x38\n3ERR_CODE_DEVICE_MAPPING_CLASS_PRIORITY_MAX_EXCEEDED\x10\x89*\x12\x35\n0ERR_CODE_DEVICE_MGMT_NW_ENCAP_TYPE_NOT_SUPPORTED\x10\x8a*\x12\x38\n3ERR_CODE_DEVICE_CONTROL_NW_ENCAP_TYPE_NOT_SUPPORTED\x10\x8b*\x12\x32\n-ERR_CODE_DEVICE_DROP_MIRROR_SESSION_NOT_FOUND\x10\x8c*\x12$\n\x1f\x45RR_CODE_DEVICE_HA_ROLE_INVALID\x10\x8d*\x12\x34\n/ERR_CODE_DEVICE_LOCAL_REGION_ID_UPD_NOT_ALLOWED\x10\x8e*\x12-\n(ERR_CODE_L2_LOCAL_MAPPINGS_NOT_SUPPORTED\x10\x80+\x12(\n#ERR_CODE_MAPPING_TAGS_NOT_SUPPORTED\x10\x81+\x12(\n#ERR_CODE_MAPPING_MOVE_NOT_SUPPORTED\x10\x82+\x12\x38\n3ERR_CODE_LOCAL_MAPPING_FLOW_RECONCILE_NOT_SUPPORTED\x10\x83+\x12\x1b\n\x16\x45RR_CODE_NHGROUP_EMPTY\x10\x80,\x12\'\n\"ERR_CODE_NHGROUP_MAX_SIZE_EXCEEDED\x10\x81,\x12*\n%ERR_CODE_NHGROUP_TYPE_UPD_NOT_ALLOWED\x10\x82,\x12*\n%ERR_CODE_NHGROUP_SIZE_UPD_NOT_ALLOWED\x10\x83,\x12\"\n\x1d\x45RR_CODE_NHGROUP_TYPE_INVALID\x10\x84,\x12!\n\x1c\x45RR_CODE_VNI_UPD_NOT_ALLOWED\x10\x80-\x12\x39\n4ERR_CODE_UNDERLAY_WHITELIST_POLICY_EMPTY_PREFIX_LIST\x10\x80.\x12\x45\n@ERR_CODE_UNDERLAY_WHITELIST_POLICY_MAX_PREFIX_LIST_SIZE_EXCEEDED\x10\x81.\x12/\n*ERR_CODE_CONFIG_VERSION_EMPTY_VERSION_LIST\x10\x80/\x12\x31\n,ERR_CODE_CONFIG_VERSION_EMPTY_VERSION_STRING\x10\x81/\x12*\n$ERR_CODE_POLICY_MAX_CLASSES_EXCEEDED\x10\x80\x80\x04\x12-\n\'ERR_CODE_POLICY_MAX_TREE_NODES_EXCEEDED\x10\x81\x80\x04\x12(\n\"ERR_CODE_POLICY_POOL_NOT_AVAILABLE\x10\x82\x80\x04\x12/\n)ERR_CODE_VPC_FABRIC_ENCAP_UPD_NOT_ALLOWED\x10\x80\x81\x04\x12%\n\x1f\x45RR_CODE_POLICER_RATE_BELOW_MIN\x10\x80\x83\x04\x12(\n\"ERR_CODE_POLICER_DIRECTION_INVALID\x10\x81\x83\x04\x12$\n\x1e\x45RR_CODE_MAX_POLICERS_EXCEEDED\x10\x82\x83\x04\x12)\n#ERR_CODE_MIRROR_LSPAN_PPS_BELOW_MIN\x10\x80\x86\x04\x12,\n&ERR_CODE_MIRROR_DST_TYPE_NOT_SUPPORTED\x10\x81\x86\x04\x12.\n(ERR_CODE_ROUTE_TABLE_MAX_ROUTES_EXCEEDED\x10\x80\x87\x04\x12-\n\'ERR_CODE_ROUTE_TABLE_POOL_NOT_AVAILABLE\x10\x81\x87\x04\x12\x31\n+ERR_CODE_ROUTE_TABLE_INVALID_ROUTE_PRIORITY\x10\x82\x87\x04\x12.\n(ERR_CODE_ROUTE_TABLE_INVALID_METER_CLASS\x10\x83\x87\x04\x12\x35\n/ERR_CODE_ROUTE_TABLE_DMAC_REWRITE_NOT_SUPPORTED\x10\x84\x87\x04\x12.\n(ERR_CODE_METER_POLICY_MAX_RULES_EXCEEDED\x10\x80\x88\x04\x12.\n(ERR_CODE_METER_POLICY_POOL_NOT_AVAILABLE\x10\x81\x88\x04\x12#\n\x1d\x45RR_CODE_VNIC_MAX_CPS_INVALID\x10\x80\x89\x04\x12(\n\"ERR_CODE_VNIC_HA_OWNER_UPD_INVALID\x10\x81\x89\x04\x12#\n\x1d\x45RR_CODE_DEVICE_VIP_ID_EXISTS\x10\x80\x8a\x04\x12(\n\"ERR_CODE_DEVICE_VIP_HW_ID_MISMATCH\x10\x81\x8a\x04\x12&\n ERR_CODE_DEVICE_VIP_ID_NOT_FOUND\x10\x82\x8a\x04\x12\x18\n\x10\x45RR_CODE_UNKNOWN\x10\xff\xff\xff\xff\x01*\xb3\x01\n\x14SwDatapathSyncStatus\x12\x1a\n\x16SW_DP_SYNC_STATUS_NONE\x10\x00\x12\x1d\n\x19SW_DP_SYNC_STATUS_ENABLED\x10\x01\x12!\n\x1dSW_DP_SYNC_STATUS_IN_PROGRESS\x10\x02\x12\x1f\n\x1bSW_DP_SYNC_STATUS_COMPLETED\x10\x03\x12\x1c\n\x18SW_DP_SYNC_STATUS_FAILED\x10\x04*s\n\x08\x41sicType\x12\x12\n\x0e\x41SIC_TYPE_NONE\x10\x00\x12\x13\n\x0f\x41SIC_TYPE_CAPRI\x10\x01\x12\x12\n\x0e\x41SIC_TYPE_ELBA\x10\x02\x12\x14\n\x10\x41SIC_TYPE_GIGLIO\x10\x03\x12\x14\n\x10\x41SIC_TYPE_SALINA\x10\x04*7\n\x04IPAF\x12\x0e\n\nIP_AF_NONE\x10\x00\x12\x0e\n\nIP_AF_INET\x10\x01\x12\x0f\n\x0bIP_AF_INET6\x10\x02*/\n\rWildcardMatch\x12\x0e\n\nMATCH_NONE\x10\x00\x12\x0e\n\tMATCH_ANY\x10\x80\x02*O\n\tPolicyDir\x12\x13\n\x0fPOLICY_DIR_NONE\x10\x00\x12\x16\n\x12POLICY_DIR_INGRESS\x10\x01\x12\x15\n\x11POLICY_DIR_EGRESS\x10\x02*\x90\x01\n\tEncapType\x12\x13\n\x0f\x45NCAP_TYPE_NONE\x10\x00\x12\x14\n\x10\x45NCAP_TYPE_DOT1Q\x10\x01\x12\x13\n\x0f\x45NCAP_TYPE_QINQ\x10\x02\x12\x17\n\x13\x45NCAP_TYPE_MPLSoUDP\x10\x03\x12\x14\n\x10\x45NCAP_TYPE_VXLAN\x10\x04\x12\x14\n\x10\x45NCAP_TYPE_NVGRE\x10\x05*\xbb\x03\n\x07LifType\x12\x11\n\rLIF_TYPE_NONE\x10\x00\x12\x11\n\rLIF_TYPE_HOST\x10\x01\x12\x14\n\x10LIF_TYPE_HOST_VF\x10\x02\x12\x16\n\x12LIF_TYPE_HOST_MGMT\x10\x03\x12\x15\n\x11LIF_TYPE_OOB_MGMT\x10\x04\x12\x18\n\x14LIF_TYPE_INBAND_MGMT\x10\x05\x12\x1a\n\x16LIF_TYPE_INTERNAL_MGMT\x10\x06\x12\x15\n\x11LIF_TYPE_DATAPATH\x10\x07\x12\x12\n\x0eLIF_TYPE_LEARN\x10\x08\x12\x14\n\x10LIF_TYPE_CONTROL\x10\t\x12\x13\n\x0fLIF_TYPE_UPLINK\x10\n\x12\x11\n\rLIF_TYPE_NVME\x10\x0b\x12\x10\n\x0cLIF_TYPE_UPT\x10\x0c\x12\x13\n\x0fLIF_TYPE_CRYPTO\x10\r\x12\x10\n\x0cLIF_TYPE_FTL\x10\x0e\x12\x12\n\x0eLIF_TYPE_ACCEL\x10\x0f\x12\x10\n\x0cLIF_TYPE_P2P\x10\x10\x12\x11\n\rLIF_TYPE_CORE\x10\x11\x12\x1a\n\x16LIF_TYPE_CRYPTO_SHARED\x10\x12\x12\x18\n\x14LIF_TYPE_HOST_VIRTIO\x10\x13*\x9e\x02\n\x0fLifQueuePurpose\x12\x1a\n\x16LIF_QUEUE_PURPOSE_NONE\x10\x00\x12\x1b\n\x17LIF_QUEUE_PURPOSE_ADMIN\x10\x01\x12\x18\n\x14LIF_QUEUE_PURPOSE_TX\x10\x02\x12\x18\n\x14LIF_QUEUE_PURPOSE_RX\x10\x03\x12 \n\x1cLIF_QUEUE_PURPOSE_SUBMISSION\x10\x04\x12\x1e\n\x1aLIF_QUEUE_PURPOSE_RESPONSE\x10\x05\x12 \n\x1cLIF_QUEUE_PURPOSE_COMPLETION\x10\x06\x12\x1b\n\x17LIF_QUEUE_PURPOSE_EVENT\x10\x07\x12\x1d\n\x19LIF_QUEUE_PURPOSE_SERVICE\x10\x08*r\n\x12SecurityRuleAction\x12\x1d\n\x19SECURITY_RULE_ACTION_NONE\x10\x00\x12\x1e\n\x1aSECURITY_RULE_ACTION_ALLOW\x10\x01\x12\x1d\n\x19SECURITY_RULE_ACTION_DENY\x10\x02*\x84\x01\n\x17SecurityPolicyRuleScale\x12#\n\x1fSECURITY_POLICY_RULE_SCALE_NONE\x10\x00\x12!\n\x1dSECURITY_POLICY_RULE_SCALE_1K\x10\x01\x12!\n\x1dSECURITY_POLICY_RULE_SCALE_4K\x10\x02*\x93\x01\n\rFwPolicyXposn\x12\x18\n\x14\x46W_POLICY_XPOSN_NONE\x10\x00\x12#\n\x1f\x46W_POLICY_XPOSN_GLOBAL_PRIORITY\x10\x01\x12\x1c\n\x18\x46W_POLICY_XPOSN_ANY_DENY\x10\x02\x12%\n!FW_POLICY_XPOSN_LAST_MATCHED_RULE\x10\x03*l\n\tNatAction\x12\x13\n\x0fNAT_ACTION_NONE\x10\x00\x12\x15\n\x11NAT_ACTION_STATIC\x10\x01\x12\x1a\n\x16NAT_ACTION_NAPT_PUBLIC\x10\x02\x12\x17\n\x13NAT_ACTION_NAPT_SVC\x10\x03*\xc5\x02\n\nMeterClass\x12\x14\n\x10METER_CLASS_NONE\x10\x00\x12\x11\n\rMETER_CLASS_1\x10\x01\x12\x11\n\rMETER_CLASS_2\x10\x02\x12\x11\n\rMETER_CLASS_3\x10\x03\x12\x11\n\rMETER_CLASS_4\x10\x04\x12\x11\n\rMETER_CLASS_5\x10\x05\x12\x11\n\rMETER_CLASS_6\x10\x06\x12\x11\n\rMETER_CLASS_7\x10\x07\x12\x11\n\rMETER_CLASS_8\x10\x08\x12\x11\n\rMETER_CLASS_9\x10\t\x12\x12\n\x0eMETER_CLASS_10\x10\n\x12\x12\n\x0eMETER_CLASS_11\x10\x0b\x12\x12\n\x0eMETER_CLASS_12\x10\x0c\x12\x12\n\x0eMETER_CLASS_13\x10\r\x12\x12\n\x0eMETER_CLASS_14\x10\x0e\x12\x12\n\x0eMETER_CLASS_15\x10\x0f*N\n\x0b\x41\x64\x64ressType\x12\x12\n\x0e\x41\x44\x44R_TYPE_NONE\x10\x00\x12\x14\n\x10\x41\x44\x44R_TYPE_PUBLIC\x10\x01\x12\x15\n\x11\x41\x44\x44R_TYPE_SERVICE\x10\x02*S\n\nAdminState\x12\x14\n\x10\x41\x44MIN_STATE_NONE\x10\x00\x12\x16\n\x12\x41\x44MIN_STATE_ENABLE\x10\x01\x12\x17\n\x13\x41\x44MIN_STATE_DISABLE\x10\x02*z\n\tRouteType\x12\x13\n\x0fROUTE_TYPE_NONE\x10\x00\x12\x14\n\x10ROUTE_TYPE_OTHER\x10\x01\x12\x15\n\x11ROUTE_TYPE_REJECT\x10\x02\x12\x14\n\x10ROUTE_TYPE_LOCAL\x10\x03\x12\x15\n\x11ROUTE_TYPE_REMOTE\x10\x04*i\n\rRouteProtocol\x12\x14\n\x10ROUTE_PROTO_NONE\x10\x00\x12\x15\n\x11ROUTE_PROTO_LOCAL\x10\x02\x12\x16\n\x12ROUTE_PROTO_STATIC\x10\x03\x12\x13\n\x0fROUTE_PROTO_BGP\x10\x0e*C\n\x07HAOwner\x12\x11\n\rHA_OWNER_NONE\x10\x00\x12\x12\n\x0eHA_OWNER_LOCAL\x10\x01\x12\x11\n\rHA_OWNER_PEER\x10\x02*\xeb\x01\n\tPortSpeed\x12\x13\n\x0fPORT_SPEED_NONE\x10\x00\x12\x12\n\x0ePORT_SPEED_10M\x10\x01\x12\x13\n\x0fPORT_SPEED_100M\x10\x02\x12\x11\n\rPORT_SPEED_1G\x10\x03\x12\x12\n\x0ePORT_SPEED_10G\x10\x04\x12\x12\n\x0ePORT_SPEED_25G\x10\x05\x12\x12\n\x0ePORT_SPEED_40G\x10\x06\x12\x12\n\x0ePORT_SPEED_50G\x10\x07\x12\x13\n\x0fPORT_SPEED_100G\x10\x08\x12\x13\n\x0fPORT_SPEED_200G\x10\t\x12\x13\n\x0fPORT_SPEED_RSVD\x10\n*P\n\x08\x46lowRole\x12\x12\n\x0e\x46LOW_ROLE_NONE\x10\x00\x12\x17\n\x13\x46LOW_ROLE_INITIATOR\x10\x01\x12\x17\n\x13\x46LOW_ROLE_RESPONDER\x10\x02*b\n\rFlowLogAction\x12\x18\n\x14\x46LOW_LOG_ACTION_NONE\x10\x00\x12\x1b\n\x17\x46LOW_LOG_ACTION_DISABLE\x10\x01\x12\x1a\n\x16\x46LOW_LOG_ACTION_ENABLE\x10\x02*L\n\tLearnMode\x12\x13\n\x0fLEARN_MODE_NONE\x10\x00\x12\x15\n\x11LEARN_MODE_NOTIFY\x10\x01\x12\x13\n\x0fLEARN_MODE_AUTO\x10\x02*\xa0\x01\n\x10ServiceRequestOp\x12\x13\n\x0fSERVICE_OP_NONE\x10\x00\x12\x15\n\x11SERVICE_OP_CREATE\x10\x01\x12\x15\n\x11SERVICE_OP_DELETE\x10\x02\x12\x15\n\x11SERVICE_OP_UPDATE\x10\x03\x12\x13\n\x0fSERVICE_OP_READ\x10\x04\x12\x1d\n\x19SERVICE_OP_READ_STREAMING\x10\x05*]\n\rFlowEntryType\x12\x18\n\x14\x46LOW_ENTRY_TYPE_NONE\x10\x00\x12\x18\n\x14\x46LOW_ENTRY_TYPE_VNIC\x10\x01\x12\x18\n\x14\x46LOW_ENTRY_TYPE_NVME\x10\x02*S\n\nActionType\x12\x14\n\x10\x41\x43TION_TYPE_NONE\x10\x00\x12\x17\n\x13\x41\x43TION_TYPE_DISABLE\x10\x01\x12\x16\n\x12\x41\x43TION_TYPE_ENABLE\x10\x02\x42\x05Z\x03pdsP\x00\x62\x06proto3'
  ,
  dependencies=[gogo__pb2.DESCRIPTOR,google_dot_protobuf_dot_any__pb2.DESCRIPTOR,],
  public_dependencies=[gogo__pb2.DESCRIPTOR,])

_APISTATUS = _descriptor.EnumDescriptor(
  name='ApiStatus',
  full_name='types.ApiStatus',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_OK', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_ERR', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_INVALID_ARG', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_EXISTS_ALREADY', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_OUT_OF_MEM', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_NOT_FOUND', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_OUT_OF_RESOURCE', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_RETRY', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_OPERATION_NOT_ALLOWED', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_TIMEOUT', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_HW_ENTRY_EXISTS', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_OPERATION_NOT_SUPPORTED', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_IN_USE', index=12, number=12,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='API_STATUS_OPERATION_NOT_PROCESSED', index=13, number=13,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4468,
  serialized_end=4881,
)
_sym_db.RegisterEnumDescriptor(_APISTATUS)

ApiStatus = enum_type_wrapper.EnumTypeWrapper(_APISTATUS)
_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='types.ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RPC_LOAD_EXCEEDED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IPV4_INGRESS_POLICY_NOT_FOUND', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IPV6_INGRESS_POLICY_NOT_FOUND', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IPV4_EGRESS_POLICY_NOT_FOUND', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IPV6_EGRESS_POLICY_NOT_FOUND', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_REGION_NOT_FOUND', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IPV4_ROUTE_TABLE_NOT_FOUND', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IPV6_ROUTE_TABLE_NOT_FOUND', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IPV4_METER_POLICY_NOT_FOUND', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IPV6_METER_POLICY_NOT_FOUND', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_INGRESS_NAT_POLICY_NOT_FOUND', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_EGRESS_NAT_POLICY_NOT_FOUND', index=12, number=12,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_NOT_FOUND', index=13, number=13,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_NOT_FOUND', index=14, number=14,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IF_NOT_FOUND', index=15, number=15,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNI_NOT_FOUND', index=16, number=16,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TUNNEL_NOT_FOUND', index=17, number=17,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_LIF_NOT_FOUND', index=18, number=18,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_NOT_FOUND', index=19, number=19,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NEXTHOP_NOT_FOUND', index=20, number=20,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NEXTHOP_GROUP_NOT_FOUND', index=21, number=21,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IF_TYPE_INVALID', index=22, number=22,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_UPD_NOT_ALLOWED', index=23, number=23,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ACCESS_ENCAP_UPD_NOT_ALLOWED', index=24, number=24,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_FABRIC_ENCAP_UPD_NOT_ALLOWED', index=25, number=25,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEFAULT_POLICY_UPD_NOT_ALLOWED', index=26, number=26,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_REMOTE_SUBNET_UPD_NOT_ALLOWED', index=27, number=27,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_REGION_UPD_NOT_ALLOWED', index=28, number=28,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_INVALID_IP_ADDR', index=29, number=29,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IF_TYPE_NOT_SUPPORTED', index=30, number=30,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_LIF_TYPE_NOT_SUPPORTED', index=31, number=31,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_TABLE_NOT_FOUND', index=32, number=32,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_NOT_FOUND', index=33, number=33,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_SVC_PORTMAP_NOT_FOUND', index=34, number=34,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NEXTHOP_TYPE_NOT_SUPPORTED', index=35, number=35,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IP_ADDRESS_FAMILY_MISMATCH', index=36, number=36,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IP_PROTOCOL_INVALID', index=37, number=37,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_L4_PORTS_NOT_EXPECTED', index=38, number=38,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_L4_PORT_RANGE_INVALID', index=39, number=39,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ICMP_TYPECODE_NOT_EXPECTED', index=40, number=40,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_IP_ADDRESS_FAMILY_INVALID', index=41, number=41,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_SVC_REWRITE_IP_ADDRESS_FAMILY_NOT_SUPPORTED', index=42, number=42,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RULE_L3_MATCH_INVALID', index=43, number=43,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RULE_L4_MATCH_INVALID', index=44, number=44,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_IPV4_INGRESS_POLICY_EXCEEDED', index=45, number=45,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_IPV6_INGRESS_POLICY_EXCEEDED', index=46, number=46,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_IPV4_EGRESS_POLICY_EXCEEDED', index=47, number=47,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_IPV6_EGRESS_POLICY_EXCEEDED', index=48, number=48,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_INGRESS_NAT_POLICY_EXCEEDED', index=49, number=49,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_EGRESS_NAT_POLICY_EXCEEDED', index=50, number=50,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_TX_MIRROR_SESSION_EXCEEDED', index=51, number=51,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_RX_MIRROR_SESSION_EXCEEDED', index=52, number=52,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_SUBNET_NOT_FOUND', index=53, number=53,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TX_MIRROR_SESSION_NOT_FOUND', index=54, number=54,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RX_MIRROR_SESSION_NOT_FOUND', index=55, number=55,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TX_POLICER_NOT_FOUND', index=56, number=56,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RX_POLICER_NOT_FOUND', index=57, number=57,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_HOST_IF_NOT_FOUND', index=58, number=58,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAC_ADDRESS_UPD_NOT_ALLOWED', index=59, number=59,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NEXTHOP_TYPE_UPD_NOT_ALLOWED', index=60, number=60,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_IPSEC_DECRYPT_SA_EXCEEDED', index=61, number=61,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ENCAP_TYPE_NOT_SUPPORTED', index=62, number=62,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DOT1Q_VALUE_INVALID', index=63, number=63,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TCP_FLAGS_NOT_EXPECTED', index=64, number=64,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_TAGS_EXCEEDED', index=65, number=65,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_SECONDARY_KEY_UPD_NOT_ALLOWED', index=66, number=66,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNF_TUNNEL_NOT_FOUND', index=67, number=67,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_SECONDARY_KEY_MISSING', index=68, number=68,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DST_TYPE_NOT_SUPPORTED', index=69, number=69,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_FLOWMON_COLLECTOR_EXCEEDED', index=70, number=70,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_FLOW_LOG_CONFIG_INVALID', index=71, number=71,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_TRUSTED_VNI_EXCEEDED', index=72, number=72,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_SYSTEM_NAME_LENGTH_EXCEEDED', index=73, number=73,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_BGP_COMMUNITY_EXCEEDED', index=74, number=74,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_HA_VIP_EXCEEDED', index=75, number=75,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_HA_VIP_ID_INVALID', index=76, number=76,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DSS_HA_ROLE_INVALID', index=77, number=77,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_HA_HEARTBEAT_COUNT_INVALID', index=78, number=78,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TUNNEL_INVALID', index=79, number=79,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_HEALTH_PROBE_MAC_ADDRESS_INVALID', index=80, number=80,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_POLICY_NOT_FOUND', index=81, number=81,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_METER_POLICY_NOT_FOUND', index=82, number=82,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_POLICY_MAX_RULES_EXCEEDED', index=83, number=4096,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RULE_MAX_ALG_EXCEEDED', index=84, number=4097,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RULE_WITHOUT_MATCH_CONDITION', index=85, number=4098,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RULE_WITHOUT_L3_MATCH_CONDITION', index=86, number=4099,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RULE_ACTION_INVALID', index=87, number=4100,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RULE_PRIORITY_INVALID', index=88, number=4101,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_TYPE_UPD_NOT_ALLOWED', index=89, number=4224,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_LOCAL_VPC_IN_USE_BY_VNIC', index=90, number=4225,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_IN_USE_BY_SUBNET', index=91, number=4226,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_IN_USE_BY_SVC_MAPPING', index=92, number=4227,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_IN_USE_BY_VPC_PEER', index=93, number=4228,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_IN_USE_BY_MAPPING', index=94, number=4229,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_PEER_VPC1_NOT_SET', index=95, number=4230,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_PEER_VPC2_INFO_NOT_SET', index=96, number=4231,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_REGION_CONFIG_NOT_ALLOWED', index=97, number=4232,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_IN_USE_BY_TUNNEL', index=98, number=4233,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TUNNEL_TYPE_UPD_NOT_ALLOWED', index=99, number=4352,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TUNNEL_REMOTE_IP_UPD_NOT_ALLOWED', index=100, number=4353,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TUNNEL_IN_USE_BY_VNIC', index=101, number=4354,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TUNNEL_LOCAL_IP_UPD_NOT_ALLOWED', index=102, number=4355,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_TUNNEL_REMOTE_IP_INVALID', index=103, number=4356,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_POLICER_DIR_UPD_NOT_ALLOWED', index=104, number=4480,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_SUBNET_IN_USE_BY_VNIC', index=105, number=4608,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_SUBNET_MAX_DHCP_POLICY_EXCEEDED', index=106, number=4609,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_SUBNET_MAX_HOST_IF_EXCEEDED', index=107, number=4610,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_REGION_LOCAL_REGION_ID_NOT_ALLOWED', index=108, number=4736,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_REGION_EMPTY_PREFIX_LIST_NOT_ALLOWED', index=109, number=4737,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_SNAP_LEN_BELOW_MIN', index=110, number=4864,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_LSPAN_PPS_ABOVE_MAX', index=111, number=4865,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_SESSION_TYPE_NOT_SUPPORTED', index=112, number=4866,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_RULE_EXISTS', index=113, number=4867,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_SESSION_NOT_FOUND', index=114, number=4868,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_INVALID_COLLECTOR_IP', index=115, number=4869,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_ERSPAN_COLLECTOR_INVALID', index=116, number=4870,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_ERSPAN_SPAN_ID_INVALID', index=117, number=4871,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ERSPAN_CONFIG_INCONSISTENT_WITH_ERSPAN_TYPE', index=118, number=4872,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_SNAP_LEN_OUT_OF_RANGE', index=119, number=4873,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_SESSION_EMPTY_DESTINATION', index=120, number=4874,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RULE_WITHOUT_MIRROR_SESSION', index=121, number=4875,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_RULE_MAX_MIRROR_SESSION_EXCEEDED', index=122, number=4876,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_CLASS_PRIORITY_MAX_EXCEEDED', index=123, number=4992,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_MAX_IP_NEXTHOP_EXCEEDED', index=124, number=4993,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_EMPTY_IP_NEXTHOP_NOT_ALLOWED', index=125, number=4994,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_OVERLAY_NEXTHOP_IP_MAC_COUNT_MISMATCH', index=126, number=4995,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_TABLE_TOO_BIG', index=127, number=4996,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_IN_REMOTE_VPC_NOT_ALLOWED', index=128, number=5248,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_ENCAP_UPD_NOT_ALLOWED', index=129, number=5249,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_ENCAP_TYPE_INVALID', index=130, number=5250,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_IP_MAC_BINDING_CHECKS_NOT_SUPPORTED', index=131, number=5251,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_HA_VIP_ID_NOT_SET', index=132, number=5252,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_HA_OWNER_NOT_SET', index=133, number=5253,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_PRIMARY_UPD_NOT_ALLOWED', index=134, number=5254,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_PUBLIC_MAC_UPD_NOT_ALLOWED', index=135, number=5255,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_VIP_ID_UPD_NOT_ALLOWED', index=136, number=5256,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_HA_OWNER_UPD_NOT_ALLOWED', index=137, number=5257,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_PRIMARY_VNIC_UPD_NOT_ALLOWED', index=138, number=5258,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_SUBNET_UPD_NOT_ALLOWED', index=139, number=5259,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_TUNNEL_UPD_NOT_ALLOWED', index=140, number=5260,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_VPC_UPD_NOT_ALLOWED', index=141, number=5261,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_SUBNET_VPC_MISSING', index=142, number=5262,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_FLOATING_VNIC_UPD_NOT_ALLOWED', index=143, number=5263,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_FLOATING_VNIC_PLS_SRC_NAT_POOL_NOT_FOUND', index=144, number=5264,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_HA_MAX_VIP_EXCEEDED', index=145, number=5376,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_HA_PREEMPTION_NOT_SUPPORTED', index=146, number=5377,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_HA_FLOW_RECONCILE_NOT_SUPPORTED', index=147, number=5378,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_HA_MODE_UPD_NOT_ALLOWED', index=148, number=5379,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_HA_VIP_ID_UPD_NOT_ALLOWED', index=149, number=5380,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_HA_VIP_IP_ADDRESS_UPD_NOT_ALLOWED', index=150, number=5381,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_TRUSTED_VNI_UPD_NOT_ALLOWED', index=151, number=5382,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_FW_ACTION_XPOSN_SCHEME_UPD_NOT_ALLOWED', index=152, number=5383,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_CONF_PERSIST_FAILED', index=153, number=5384,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_MAPPING_CLASS_PRIORITY_MAX_EXCEEDED', index=154, number=5385,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_MGMT_NW_ENCAP_TYPE_NOT_SUPPORTED', index=155, number=5386,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_CONTROL_NW_ENCAP_TYPE_NOT_SUPPORTED', index=156, number=5387,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_DROP_MIRROR_SESSION_NOT_FOUND', index=157, number=5388,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_HA_ROLE_INVALID', index=158, number=5389,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_LOCAL_REGION_ID_UPD_NOT_ALLOWED', index=159, number=5390,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_L2_LOCAL_MAPPINGS_NOT_SUPPORTED', index=160, number=5504,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAPPING_TAGS_NOT_SUPPORTED', index=161, number=5505,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAPPING_MOVE_NOT_SUPPORTED', index=162, number=5506,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_LOCAL_MAPPING_FLOW_RECONCILE_NOT_SUPPORTED', index=163, number=5507,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NHGROUP_EMPTY', index=164, number=5632,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NHGROUP_MAX_SIZE_EXCEEDED', index=165, number=5633,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NHGROUP_TYPE_UPD_NOT_ALLOWED', index=166, number=5634,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NHGROUP_SIZE_UPD_NOT_ALLOWED', index=167, number=5635,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_NHGROUP_TYPE_INVALID', index=168, number=5636,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNI_UPD_NOT_ALLOWED', index=169, number=5760,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_UNDERLAY_WHITELIST_POLICY_EMPTY_PREFIX_LIST', index=170, number=5888,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_UNDERLAY_WHITELIST_POLICY_MAX_PREFIX_LIST_SIZE_EXCEEDED', index=171, number=5889,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_CONFIG_VERSION_EMPTY_VERSION_LIST', index=172, number=6016,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_CONFIG_VERSION_EMPTY_VERSION_STRING', index=173, number=6017,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_POLICY_MAX_CLASSES_EXCEEDED', index=174, number=65536,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_POLICY_MAX_TREE_NODES_EXCEEDED', index=175, number=65537,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_POLICY_POOL_NOT_AVAILABLE', index=176, number=65538,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VPC_FABRIC_ENCAP_UPD_NOT_ALLOWED', index=177, number=65664,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_POLICER_RATE_BELOW_MIN', index=178, number=65920,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_POLICER_DIRECTION_INVALID', index=179, number=65921,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MAX_POLICERS_EXCEEDED', index=180, number=65922,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_LSPAN_PPS_BELOW_MIN', index=181, number=66304,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_MIRROR_DST_TYPE_NOT_SUPPORTED', index=182, number=66305,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_TABLE_MAX_ROUTES_EXCEEDED', index=183, number=66432,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_TABLE_POOL_NOT_AVAILABLE', index=184, number=66433,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_TABLE_INVALID_ROUTE_PRIORITY', index=185, number=66434,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_TABLE_INVALID_METER_CLASS', index=186, number=66435,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_ROUTE_TABLE_DMAC_REWRITE_NOT_SUPPORTED', index=187, number=66436,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_METER_POLICY_MAX_RULES_EXCEEDED', index=188, number=66560,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_METER_POLICY_POOL_NOT_AVAILABLE', index=189, number=66561,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_MAX_CPS_INVALID', index=190, number=66688,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_VNIC_HA_OWNER_UPD_INVALID', index=191, number=66689,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_VIP_ID_EXISTS', index=192, number=66816,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_VIP_HW_ID_MISMATCH', index=193, number=66817,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_DEVICE_VIP_ID_NOT_FOUND', index=194, number=66818,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERR_CODE_UNKNOWN', index=195, number=536870911,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4884,
  serialized_end=13127,
)
_sym_db.RegisterEnumDescriptor(_ERRORCODE)

ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)
_SWDATAPATHSYNCSTATUS = _descriptor.EnumDescriptor(
  name='SwDatapathSyncStatus',
  full_name='types.SwDatapathSyncStatus',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SW_DP_SYNC_STATUS_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SW_DP_SYNC_STATUS_ENABLED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SW_DP_SYNC_STATUS_IN_PROGRESS', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SW_DP_SYNC_STATUS_COMPLETED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SW_DP_SYNC_STATUS_FAILED', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=13130,
  serialized_end=13309,
)
_sym_db.RegisterEnumDescriptor(_SWDATAPATHSYNCSTATUS)

SwDatapathSyncStatus = enum_type_wrapper.EnumTypeWrapper(_SWDATAPATHSYNCSTATUS)
_ASICTYPE = _descriptor.EnumDescriptor(
  name='AsicType',
  full_name='types.AsicType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ASIC_TYPE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ASIC_TYPE_CAPRI', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ASIC_TYPE_ELBA', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ASIC_TYPE_GIGLIO', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ASIC_TYPE_SALINA', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=13311,
  serialized_end=13426,
)
_sym_db.RegisterEnumDescriptor(_ASICTYPE)

AsicType = enum_type_wrapper.EnumTypeWrapper(_ASICTYPE)
_IPAF = _descriptor.EnumDescriptor(
  name='IPAF',
  full_name='types.IPAF',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IP_AF_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IP_AF_INET', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IP_AF_INET6', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=13428,
  serialized_end=13483,
)
_sym_db.RegisterEnumDescriptor(_IPAF)

IPAF = enum_type_wrapper.EnumTypeWrapper(_IPAF)
_WILDCARDMATCH = _descriptor.EnumDescriptor(
  name='WildcardMatch',
  full_name='types.WildcardMatch',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MATCH_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MATCH_ANY', index=1, number=256,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=13485,
  serialized_end=13532,
)
_sym_db.RegisterEnumDescriptor(_WILDCARDMATCH)

WildcardMatch = enum_type_wrapper.EnumTypeWrapper(_WILDCARDMATCH)
_POLICYDIR = _descriptor.EnumDescriptor(
  name='PolicyDir',
  full_name='types.PolicyDir',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='POLICY_DIR_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='POLICY_DIR_INGRESS', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='POLICY_DIR_EGRESS', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=13534,
  serialized_end=13613,
)
_sym_db.RegisterEnumDescriptor(_POLICYDIR)

PolicyDir = enum_type_wrapper.EnumTypeWrapper(_POLICYDIR)
_ENCAPTYPE = _descriptor.EnumDescriptor(
  name='EncapType',
  full_name='types.EncapType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ENCAP_TYPE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ENCAP_TYPE_DOT1Q', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ENCAP_TYPE_QINQ', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ENCAP_TYPE_MPLSoUDP', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ENCAP_TYPE_VXLAN', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ENCAP_TYPE_NVGRE', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=13616,
  serialized_end=13760,
)
_sym_db.RegisterEnumDescriptor(_ENCAPTYPE)

EncapType = enum_type_wrapper.EnumTypeWrapper(_ENCAPTYPE)
_LIFTYPE = _descriptor.EnumDescriptor(
  name='LifType',
  full_name='types.LifType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_HOST', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_HOST_VF', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_HOST_MGMT', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_OOB_MGMT', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_INBAND_MGMT', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_INTERNAL_MGMT', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_DATAPATH', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_LEARN', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_CONTROL', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_UPLINK', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_NVME', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_UPT', index=12, number=12,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_CRYPTO', index=13, number=13,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_FTL', index=14, number=14,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_ACCEL', index=15, number=15,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_P2P', index=16, number=16,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_CORE', index=17, number=17,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_CRYPTO_SHARED', index=18, number=18,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_TYPE_HOST_VIRTIO', index=19, number=19,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=13763,
  serialized_end=14206,
)
_sym_db.RegisterEnumDescriptor(_LIFTYPE)

LifType = enum_type_wrapper.EnumTypeWrapper(_LIFTYPE)
_LIFQUEUEPURPOSE = _descriptor.EnumDescriptor(
  name='LifQueuePurpose',
  full_name='types.LifQueuePurpose',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LIF_QUEUE_PURPOSE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_QUEUE_PURPOSE_ADMIN', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_QUEUE_PURPOSE_TX', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_QUEUE_PURPOSE_RX', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_QUEUE_PURPOSE_SUBMISSION', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_QUEUE_PURPOSE_RESPONSE', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_QUEUE_PURPOSE_COMPLETION', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_QUEUE_PURPOSE_EVENT', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LIF_QUEUE_PURPOSE_SERVICE', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14209,
  serialized_end=14495,
)
_sym_db.RegisterEnumDescriptor(_LIFQUEUEPURPOSE)

LifQueuePurpose = enum_type_wrapper.EnumTypeWrapper(_LIFQUEUEPURPOSE)
_SECURITYRULEACTION = _descriptor.EnumDescriptor(
  name='SecurityRuleAction',
  full_name='types.SecurityRuleAction',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SECURITY_RULE_ACTION_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SECURITY_RULE_ACTION_ALLOW', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SECURITY_RULE_ACTION_DENY', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14497,
  serialized_end=14611,
)
_sym_db.RegisterEnumDescriptor(_SECURITYRULEACTION)

SecurityRuleAction = enum_type_wrapper.EnumTypeWrapper(_SECURITYRULEACTION)
_SECURITYPOLICYRULESCALE = _descriptor.EnumDescriptor(
  name='SecurityPolicyRuleScale',
  full_name='types.SecurityPolicyRuleScale',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SECURITY_POLICY_RULE_SCALE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SECURITY_POLICY_RULE_SCALE_1K', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SECURITY_POLICY_RULE_SCALE_4K', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14614,
  serialized_end=14746,
)
_sym_db.RegisterEnumDescriptor(_SECURITYPOLICYRULESCALE)

SecurityPolicyRuleScale = enum_type_wrapper.EnumTypeWrapper(_SECURITYPOLICYRULESCALE)
_FWPOLICYXPOSN = _descriptor.EnumDescriptor(
  name='FwPolicyXposn',
  full_name='types.FwPolicyXposn',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FW_POLICY_XPOSN_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FW_POLICY_XPOSN_GLOBAL_PRIORITY', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FW_POLICY_XPOSN_ANY_DENY', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FW_POLICY_XPOSN_LAST_MATCHED_RULE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14749,
  serialized_end=14896,
)
_sym_db.RegisterEnumDescriptor(_FWPOLICYXPOSN)

FwPolicyXposn = enum_type_wrapper.EnumTypeWrapper(_FWPOLICYXPOSN)
_NATACTION = _descriptor.EnumDescriptor(
  name='NatAction',
  full_name='types.NatAction',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NAT_ACTION_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NAT_ACTION_STATIC', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NAT_ACTION_NAPT_PUBLIC', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NAT_ACTION_NAPT_SVC', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=14898,
  serialized_end=15006,
)
_sym_db.RegisterEnumDescriptor(_NATACTION)

NatAction = enum_type_wrapper.EnumTypeWrapper(_NATACTION)
_METERCLASS = _descriptor.EnumDescriptor(
  name='MeterClass',
  full_name='types.MeterClass',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_1', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_2', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_3', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_4', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_5', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_6', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_7', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_8', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_9', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_10', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_11', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_12', index=12, number=12,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_13', index=13, number=13,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_14', index=14, number=14,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='METER_CLASS_15', index=15, number=15,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=15009,
  serialized_end=15334,
)
_sym_db.RegisterEnumDescriptor(_METERCLASS)

MeterClass = enum_type_wrapper.EnumTypeWrapper(_METERCLASS)
_ADDRESSTYPE = _descriptor.EnumDescriptor(
  name='AddressType',
  full_name='types.AddressType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ADDR_TYPE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ADDR_TYPE_PUBLIC', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ADDR_TYPE_SERVICE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=15336,
  serialized_end=15414,
)
_sym_db.RegisterEnumDescriptor(_ADDRESSTYPE)

AddressType = enum_type_wrapper.EnumTypeWrapper(_ADDRESSTYPE)
_ADMINSTATE = _descriptor.EnumDescriptor(
  name='AdminState',
  full_name='types.AdminState',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ADMIN_STATE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ADMIN_STATE_ENABLE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ADMIN_STATE_DISABLE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=15416,
  serialized_end=15499,
)
_sym_db.RegisterEnumDescriptor(_ADMINSTATE)

AdminState = enum_type_wrapper.EnumTypeWrapper(_ADMINSTATE)
_ROUTETYPE = _descriptor.EnumDescriptor(
  name='RouteType',
  full_name='types.RouteType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ROUTE_TYPE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ROUTE_TYPE_OTHER', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ROUTE_TYPE_REJECT', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ROUTE_TYPE_LOCAL', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ROUTE_TYPE_REMOTE', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=15501,
  serialized_end=15623,
)
_sym_db.RegisterEnumDescriptor(_ROUTETYPE)

RouteType = enum_type_wrapper.EnumTypeWrapper(_ROUTETYPE)
_ROUTEPROTOCOL = _descriptor.EnumDescriptor(
  name='RouteProtocol',
  full_name='types.RouteProtocol',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ROUTE_PROTO_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ROUTE_PROTO_LOCAL', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ROUTE_PROTO_STATIC', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ROUTE_PROTO_BGP', index=3, number=14,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=15625,
  serialized_end=15730,
)
_sym_db.RegisterEnumDescriptor(_ROUTEPROTOCOL)

RouteProtocol = enum_type_wrapper.EnumTypeWrapper(_ROUTEPROTOCOL)
_HAOWNER = _descriptor.EnumDescriptor(
  name='HAOwner',
  full_name='types.HAOwner',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HA_OWNER_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HA_OWNER_LOCAL', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HA_OWNER_PEER', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=15732,
  serialized_end=15799,
)
_sym_db.RegisterEnumDescriptor(_HAOWNER)

HAOwner = enum_type_wrapper.EnumTypeWrapper(_HAOWNER)
_PORTSPEED = _descriptor.EnumDescriptor(
  name='PortSpeed',
  full_name='types.PortSpeed',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_10M', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_100M', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_1G', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_10G', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_25G', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_40G', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_50G', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_100G', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_200G', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PORT_SPEED_RSVD', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=15802,
  serialized_end=16037,
)
_sym_db.RegisterEnumDescriptor(_PORTSPEED)

PortSpeed = enum_type_wrapper.EnumTypeWrapper(_PORTSPEED)
_FLOWROLE = _descriptor.EnumDescriptor(
  name='FlowRole',
  full_name='types.FlowRole',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FLOW_ROLE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FLOW_ROLE_INITIATOR', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FLOW_ROLE_RESPONDER', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=16039,
  serialized_end=16119,
)
_sym_db.RegisterEnumDescriptor(_FLOWROLE)

FlowRole = enum_type_wrapper.EnumTypeWrapper(_FLOWROLE)
_FLOWLOGACTION = _descriptor.EnumDescriptor(
  name='FlowLogAction',
  full_name='types.FlowLogAction',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FLOW_LOG_ACTION_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FLOW_LOG_ACTION_DISABLE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FLOW_LOG_ACTION_ENABLE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=16121,
  serialized_end=16219,
)
_sym_db.RegisterEnumDescriptor(_FLOWLOGACTION)

FlowLogAction = enum_type_wrapper.EnumTypeWrapper(_FLOWLOGACTION)
_LEARNMODE = _descriptor.EnumDescriptor(
  name='LearnMode',
  full_name='types.LearnMode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LEARN_MODE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LEARN_MODE_NOTIFY', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LEARN_MODE_AUTO', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=16221,
  serialized_end=16297,
)
_sym_db.RegisterEnumDescriptor(_LEARNMODE)

LearnMode = enum_type_wrapper.EnumTypeWrapper(_LEARNMODE)
_SERVICEREQUESTOP = _descriptor.EnumDescriptor(
  name='ServiceRequestOp',
  full_name='types.ServiceRequestOp',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SERVICE_OP_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_OP_CREATE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_OP_DELETE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_OP_UPDATE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_OP_READ', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_OP_READ_STREAMING', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=16300,
  serialized_end=16460,
)
_sym_db.RegisterEnumDescriptor(_SERVICEREQUESTOP)

ServiceRequestOp = enum_type_wrapper.EnumTypeWrapper(_SERVICEREQUESTOP)
_FLOWENTRYTYPE = _descriptor.EnumDescriptor(
  name='FlowEntryType',
  full_name='types.FlowEntryType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FLOW_ENTRY_TYPE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FLOW_ENTRY_TYPE_VNIC', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FLOW_ENTRY_TYPE_NVME', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=16462,
  serialized_end=16555,
)
_sym_db.RegisterEnumDescriptor(_FLOWENTRYTYPE)

FlowEntryType = enum_type_wrapper.EnumTypeWrapper(_FLOWENTRYTYPE)
_ACTIONTYPE = _descriptor.EnumDescriptor(
  name='ActionType',
  full_name='types.ActionType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACTION_TYPE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ACTION_TYPE_DISABLE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ACTION_TYPE_ENABLE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=16557,
  serialized_end=16640,
)
_sym_db.RegisterEnumDescriptor(_ACTIONTYPE)

ActionType = enum_type_wrapper.EnumTypeWrapper(_ACTIONTYPE)
API_STATUS_OK = 0
API_STATUS_ERR = 1
API_STATUS_INVALID_ARG = 2
API_STATUS_EXISTS_ALREADY = 3
API_STATUS_OUT_OF_MEM = 4
API_STATUS_NOT_FOUND = 5
API_STATUS_OUT_OF_RESOURCE = 6
API_STATUS_RETRY = 7
API_STATUS_OPERATION_NOT_ALLOWED = 8
API_STATUS_TIMEOUT = 9
API_STATUS_HW_ENTRY_EXISTS = 10
API_STATUS_OPERATION_NOT_SUPPORTED = 11
API_STATUS_IN_USE = 12
API_STATUS_OPERATION_NOT_PROCESSED = 13
ERR_CODE_NONE = 0
ERR_CODE_RPC_LOAD_EXCEEDED = 1
ERR_CODE_IPV4_INGRESS_POLICY_NOT_FOUND = 2
ERR_CODE_IPV6_INGRESS_POLICY_NOT_FOUND = 3
ERR_CODE_IPV4_EGRESS_POLICY_NOT_FOUND = 4
ERR_CODE_IPV6_EGRESS_POLICY_NOT_FOUND = 5
ERR_CODE_REGION_NOT_FOUND = 6
ERR_CODE_IPV4_ROUTE_TABLE_NOT_FOUND = 7
ERR_CODE_IPV6_ROUTE_TABLE_NOT_FOUND = 8
ERR_CODE_IPV4_METER_POLICY_NOT_FOUND = 9
ERR_CODE_IPV6_METER_POLICY_NOT_FOUND = 10
ERR_CODE_INGRESS_NAT_POLICY_NOT_FOUND = 11
ERR_CODE_EGRESS_NAT_POLICY_NOT_FOUND = 12
ERR_CODE_DEVICE_NOT_FOUND = 13
ERR_CODE_VPC_NOT_FOUND = 14
ERR_CODE_IF_NOT_FOUND = 15
ERR_CODE_VNI_NOT_FOUND = 16
ERR_CODE_TUNNEL_NOT_FOUND = 17
ERR_CODE_LIF_NOT_FOUND = 18
ERR_CODE_VNIC_NOT_FOUND = 19
ERR_CODE_NEXTHOP_NOT_FOUND = 20
ERR_CODE_NEXTHOP_GROUP_NOT_FOUND = 21
ERR_CODE_IF_TYPE_INVALID = 22
ERR_CODE_VPC_UPD_NOT_ALLOWED = 23
ERR_CODE_ACCESS_ENCAP_UPD_NOT_ALLOWED = 24
ERR_CODE_FABRIC_ENCAP_UPD_NOT_ALLOWED = 25
ERR_CODE_DEFAULT_POLICY_UPD_NOT_ALLOWED = 26
ERR_CODE_REMOTE_SUBNET_UPD_NOT_ALLOWED = 27
ERR_CODE_REGION_UPD_NOT_ALLOWED = 28
ERR_CODE_INVALID_IP_ADDR = 29
ERR_CODE_IF_TYPE_NOT_SUPPORTED = 30
ERR_CODE_LIF_TYPE_NOT_SUPPORTED = 31
ERR_CODE_ROUTE_TABLE_NOT_FOUND = 32
ERR_CODE_ROUTE_NOT_FOUND = 33
ERR_CODE_SVC_PORTMAP_NOT_FOUND = 34
ERR_CODE_NEXTHOP_TYPE_NOT_SUPPORTED = 35
ERR_CODE_IP_ADDRESS_FAMILY_MISMATCH = 36
ERR_CODE_IP_PROTOCOL_INVALID = 37
ERR_CODE_L4_PORTS_NOT_EXPECTED = 38
ERR_CODE_L4_PORT_RANGE_INVALID = 39
ERR_CODE_ICMP_TYPECODE_NOT_EXPECTED = 40
ERR_CODE_IP_ADDRESS_FAMILY_INVALID = 41
ERR_CODE_SVC_REWRITE_IP_ADDRESS_FAMILY_NOT_SUPPORTED = 42
ERR_CODE_RULE_L3_MATCH_INVALID = 43
ERR_CODE_RULE_L4_MATCH_INVALID = 44
ERR_CODE_MAX_IPV4_INGRESS_POLICY_EXCEEDED = 45
ERR_CODE_MAX_IPV6_INGRESS_POLICY_EXCEEDED = 46
ERR_CODE_MAX_IPV4_EGRESS_POLICY_EXCEEDED = 47
ERR_CODE_MAX_IPV6_EGRESS_POLICY_EXCEEDED = 48
ERR_CODE_MAX_INGRESS_NAT_POLICY_EXCEEDED = 49
ERR_CODE_MAX_EGRESS_NAT_POLICY_EXCEEDED = 50
ERR_CODE_MAX_TX_MIRROR_SESSION_EXCEEDED = 51
ERR_CODE_MAX_RX_MIRROR_SESSION_EXCEEDED = 52
ERR_CODE_SUBNET_NOT_FOUND = 53
ERR_CODE_TX_MIRROR_SESSION_NOT_FOUND = 54
ERR_CODE_RX_MIRROR_SESSION_NOT_FOUND = 55
ERR_CODE_TX_POLICER_NOT_FOUND = 56
ERR_CODE_RX_POLICER_NOT_FOUND = 57
ERR_CODE_HOST_IF_NOT_FOUND = 58
ERR_CODE_MAC_ADDRESS_UPD_NOT_ALLOWED = 59
ERR_CODE_NEXTHOP_TYPE_UPD_NOT_ALLOWED = 60
ERR_CODE_MAX_IPSEC_DECRYPT_SA_EXCEEDED = 61
ERR_CODE_ENCAP_TYPE_NOT_SUPPORTED = 62
ERR_CODE_DOT1Q_VALUE_INVALID = 63
ERR_CODE_TCP_FLAGS_NOT_EXPECTED = 64
ERR_CODE_MAX_TAGS_EXCEEDED = 65
ERR_CODE_SECONDARY_KEY_UPD_NOT_ALLOWED = 66
ERR_CODE_VNF_TUNNEL_NOT_FOUND = 67
ERR_CODE_SECONDARY_KEY_MISSING = 68
ERR_CODE_DST_TYPE_NOT_SUPPORTED = 69
ERR_CODE_MAX_FLOWMON_COLLECTOR_EXCEEDED = 70
ERR_CODE_FLOW_LOG_CONFIG_INVALID = 71
ERR_CODE_MAX_TRUSTED_VNI_EXCEEDED = 72
ERR_CODE_MAX_SYSTEM_NAME_LENGTH_EXCEEDED = 73
ERR_CODE_MAX_BGP_COMMUNITY_EXCEEDED = 74
ERR_CODE_MAX_HA_VIP_EXCEEDED = 75
ERR_CODE_HA_VIP_ID_INVALID = 76
ERR_CODE_DSS_HA_ROLE_INVALID = 77
ERR_CODE_HA_HEARTBEAT_COUNT_INVALID = 78
ERR_CODE_TUNNEL_INVALID = 79
ERR_CODE_HEALTH_PROBE_MAC_ADDRESS_INVALID = 80
ERR_CODE_POLICY_NOT_FOUND = 81
ERR_CODE_METER_POLICY_NOT_FOUND = 82
ERR_CODE_POLICY_MAX_RULES_EXCEEDED = 4096
ERR_CODE_RULE_MAX_ALG_EXCEEDED = 4097
ERR_CODE_RULE_WITHOUT_MATCH_CONDITION = 4098
ERR_CODE_RULE_WITHOUT_L3_MATCH_CONDITION = 4099
ERR_CODE_RULE_ACTION_INVALID = 4100
ERR_CODE_RULE_PRIORITY_INVALID = 4101
ERR_CODE_VPC_TYPE_UPD_NOT_ALLOWED = 4224
ERR_CODE_VPC_LOCAL_VPC_IN_USE_BY_VNIC = 4225
ERR_CODE_VPC_IN_USE_BY_SUBNET = 4226
ERR_CODE_VPC_IN_USE_BY_SVC_MAPPING = 4227
ERR_CODE_VPC_IN_USE_BY_VPC_PEER = 4228
ERR_CODE_VPC_IN_USE_BY_MAPPING = 4229
ERR_CODE_VPC_PEER_VPC1_NOT_SET = 4230
ERR_CODE_VPC_PEER_VPC2_INFO_NOT_SET = 4231
ERR_CODE_VPC_REGION_CONFIG_NOT_ALLOWED = 4232
ERR_CODE_VPC_IN_USE_BY_TUNNEL = 4233
ERR_CODE_TUNNEL_TYPE_UPD_NOT_ALLOWED = 4352
ERR_CODE_TUNNEL_REMOTE_IP_UPD_NOT_ALLOWED = 4353
ERR_CODE_TUNNEL_IN_USE_BY_VNIC = 4354
ERR_CODE_TUNNEL_LOCAL_IP_UPD_NOT_ALLOWED = 4355
ERR_CODE_TUNNEL_REMOTE_IP_INVALID = 4356
ERR_CODE_POLICER_DIR_UPD_NOT_ALLOWED = 4480
ERR_CODE_SUBNET_IN_USE_BY_VNIC = 4608
ERR_CODE_SUBNET_MAX_DHCP_POLICY_EXCEEDED = 4609
ERR_CODE_SUBNET_MAX_HOST_IF_EXCEEDED = 4610
ERR_CODE_REGION_LOCAL_REGION_ID_NOT_ALLOWED = 4736
ERR_CODE_REGION_EMPTY_PREFIX_LIST_NOT_ALLOWED = 4737
ERR_CODE_MIRROR_SNAP_LEN_BELOW_MIN = 4864
ERR_CODE_MIRROR_LSPAN_PPS_ABOVE_MAX = 4865
ERR_CODE_MIRROR_SESSION_TYPE_NOT_SUPPORTED = 4866
ERR_CODE_MIRROR_RULE_EXISTS = 4867
ERR_CODE_MIRROR_SESSION_NOT_FOUND = 4868
ERR_CODE_MIRROR_INVALID_COLLECTOR_IP = 4869
ERR_CODE_MIRROR_ERSPAN_COLLECTOR_INVALID = 4870
ERR_CODE_MIRROR_ERSPAN_SPAN_ID_INVALID = 4871
ERR_CODE_ERSPAN_CONFIG_INCONSISTENT_WITH_ERSPAN_TYPE = 4872
ERR_CODE_MIRROR_SNAP_LEN_OUT_OF_RANGE = 4873
ERR_CODE_MIRROR_SESSION_EMPTY_DESTINATION = 4874
ERR_CODE_RULE_WITHOUT_MIRROR_SESSION = 4875
ERR_CODE_RULE_MAX_MIRROR_SESSION_EXCEEDED = 4876
ERR_CODE_ROUTE_CLASS_PRIORITY_MAX_EXCEEDED = 4992
ERR_CODE_ROUTE_MAX_IP_NEXTHOP_EXCEEDED = 4993
ERR_CODE_ROUTE_EMPTY_IP_NEXTHOP_NOT_ALLOWED = 4994
ERR_CODE_OVERLAY_NEXTHOP_IP_MAC_COUNT_MISMATCH = 4995
ERR_CODE_ROUTE_TABLE_TOO_BIG = 4996
ERR_CODE_VNIC_IN_REMOTE_VPC_NOT_ALLOWED = 5248
ERR_CODE_VNIC_ENCAP_UPD_NOT_ALLOWED = 5249
ERR_CODE_VNIC_ENCAP_TYPE_INVALID = 5250
ERR_CODE_VNIC_IP_MAC_BINDING_CHECKS_NOT_SUPPORTED = 5251
ERR_CODE_VNIC_HA_VIP_ID_NOT_SET = 5252
ERR_CODE_VNIC_HA_OWNER_NOT_SET = 5253
ERR_CODE_VNIC_PRIMARY_UPD_NOT_ALLOWED = 5254
ERR_CODE_VNIC_PUBLIC_MAC_UPD_NOT_ALLOWED = 5255
ERR_CODE_VNIC_VIP_ID_UPD_NOT_ALLOWED = 5256
ERR_CODE_VNIC_HA_OWNER_UPD_NOT_ALLOWED = 5257
ERR_CODE_VNIC_PRIMARY_VNIC_UPD_NOT_ALLOWED = 5258
ERR_CODE_VNIC_SUBNET_UPD_NOT_ALLOWED = 5259
ERR_CODE_VNIC_TUNNEL_UPD_NOT_ALLOWED = 5260
ERR_CODE_VNIC_VPC_UPD_NOT_ALLOWED = 5261
ERR_CODE_VNIC_SUBNET_VPC_MISSING = 5262
ERR_CODE_VNIC_FLOATING_VNIC_UPD_NOT_ALLOWED = 5263
ERR_CODE_VNIC_FLOATING_VNIC_PLS_SRC_NAT_POOL_NOT_FOUND = 5264
ERR_CODE_DEVICE_HA_MAX_VIP_EXCEEDED = 5376
ERR_CODE_DEVICE_HA_PREEMPTION_NOT_SUPPORTED = 5377
ERR_CODE_DEVICE_HA_FLOW_RECONCILE_NOT_SUPPORTED = 5378
ERR_CODE_DEVICE_HA_MODE_UPD_NOT_ALLOWED = 5379
ERR_CODE_DEVICE_HA_VIP_ID_UPD_NOT_ALLOWED = 5380
ERR_CODE_DEVICE_HA_VIP_IP_ADDRESS_UPD_NOT_ALLOWED = 5381
ERR_CODE_DEVICE_TRUSTED_VNI_UPD_NOT_ALLOWED = 5382
ERR_CODE_DEVICE_FW_ACTION_XPOSN_SCHEME_UPD_NOT_ALLOWED = 5383
ERR_CODE_DEVICE_CONF_PERSIST_FAILED = 5384
ERR_CODE_DEVICE_MAPPING_CLASS_PRIORITY_MAX_EXCEEDED = 5385
ERR_CODE_DEVICE_MGMT_NW_ENCAP_TYPE_NOT_SUPPORTED = 5386
ERR_CODE_DEVICE_CONTROL_NW_ENCAP_TYPE_NOT_SUPPORTED = 5387
ERR_CODE_DEVICE_DROP_MIRROR_SESSION_NOT_FOUND = 5388
ERR_CODE_DEVICE_HA_ROLE_INVALID = 5389
ERR_CODE_DEVICE_LOCAL_REGION_ID_UPD_NOT_ALLOWED = 5390
ERR_CODE_L2_LOCAL_MAPPINGS_NOT_SUPPORTED = 5504
ERR_CODE_MAPPING_TAGS_NOT_SUPPORTED = 5505
ERR_CODE_MAPPING_MOVE_NOT_SUPPORTED = 5506
ERR_CODE_LOCAL_MAPPING_FLOW_RECONCILE_NOT_SUPPORTED = 5507
ERR_CODE_NHGROUP_EMPTY = 5632
ERR_CODE_NHGROUP_MAX_SIZE_EXCEEDED = 5633
ERR_CODE_NHGROUP_TYPE_UPD_NOT_ALLOWED = 5634
ERR_CODE_NHGROUP_SIZE_UPD_NOT_ALLOWED = 5635
ERR_CODE_NHGROUP_TYPE_INVALID = 5636
ERR_CODE_VNI_UPD_NOT_ALLOWED = 5760
ERR_CODE_UNDERLAY_WHITELIST_POLICY_EMPTY_PREFIX_LIST = 5888
ERR_CODE_UNDERLAY_WHITELIST_POLICY_MAX_PREFIX_LIST_SIZE_EXCEEDED = 5889
ERR_CODE_CONFIG_VERSION_EMPTY_VERSION_LIST = 6016
ERR_CODE_CONFIG_VERSION_EMPTY_VERSION_STRING = 6017
ERR_CODE_POLICY_MAX_CLASSES_EXCEEDED = 65536
ERR_CODE_POLICY_MAX_TREE_NODES_EXCEEDED = 65537
ERR_CODE_POLICY_POOL_NOT_AVAILABLE = 65538
ERR_CODE_VPC_FABRIC_ENCAP_UPD_NOT_ALLOWED = 65664
ERR_CODE_POLICER_RATE_BELOW_MIN = 65920
ERR_CODE_POLICER_DIRECTION_INVALID = 65921
ERR_CODE_MAX_POLICERS_EXCEEDED = 65922
ERR_CODE_MIRROR_LSPAN_PPS_BELOW_MIN = 66304
ERR_CODE_MIRROR_DST_TYPE_NOT_SUPPORTED = 66305
ERR_CODE_ROUTE_TABLE_MAX_ROUTES_EXCEEDED = 66432
ERR_CODE_ROUTE_TABLE_POOL_NOT_AVAILABLE = 66433
ERR_CODE_ROUTE_TABLE_INVALID_ROUTE_PRIORITY = 66434
ERR_CODE_ROUTE_TABLE_INVALID_METER_CLASS = 66435
ERR_CODE_ROUTE_TABLE_DMAC_REWRITE_NOT_SUPPORTED = 66436
ERR_CODE_METER_POLICY_MAX_RULES_EXCEEDED = 66560
ERR_CODE_METER_POLICY_POOL_NOT_AVAILABLE = 66561
ERR_CODE_VNIC_MAX_CPS_INVALID = 66688
ERR_CODE_VNIC_HA_OWNER_UPD_INVALID = 66689
ERR_CODE_DEVICE_VIP_ID_EXISTS = 66816
ERR_CODE_DEVICE_VIP_HW_ID_MISMATCH = 66817
ERR_CODE_DEVICE_VIP_ID_NOT_FOUND = 66818
ERR_CODE_UNKNOWN = 536870911
SW_DP_SYNC_STATUS_NONE = 0
SW_DP_SYNC_STATUS_ENABLED = 1
SW_DP_SYNC_STATUS_IN_PROGRESS = 2
SW_DP_SYNC_STATUS_COMPLETED = 3
SW_DP_SYNC_STATUS_FAILED = 4
ASIC_TYPE_NONE = 0
ASIC_TYPE_CAPRI = 1
ASIC_TYPE_ELBA = 2
ASIC_TYPE_GIGLIO = 3
ASIC_TYPE_SALINA = 4
IP_AF_NONE = 0
IP_AF_INET = 1
IP_AF_INET6 = 2
MATCH_NONE = 0
MATCH_ANY = 256
POLICY_DIR_NONE = 0
POLICY_DIR_INGRESS = 1
POLICY_DIR_EGRESS = 2
ENCAP_TYPE_NONE = 0
ENCAP_TYPE_DOT1Q = 1
ENCAP_TYPE_QINQ = 2
ENCAP_TYPE_MPLSoUDP = 3
ENCAP_TYPE_VXLAN = 4
ENCAP_TYPE_NVGRE = 5
LIF_TYPE_NONE = 0
LIF_TYPE_HOST = 1
LIF_TYPE_HOST_VF = 2
LIF_TYPE_HOST_MGMT = 3
LIF_TYPE_OOB_MGMT = 4
LIF_TYPE_INBAND_MGMT = 5
LIF_TYPE_INTERNAL_MGMT = 6
LIF_TYPE_DATAPATH = 7
LIF_TYPE_LEARN = 8
LIF_TYPE_CONTROL = 9
LIF_TYPE_UPLINK = 10
LIF_TYPE_NVME = 11
LIF_TYPE_UPT = 12
LIF_TYPE_CRYPTO = 13
LIF_TYPE_FTL = 14
LIF_TYPE_ACCEL = 15
LIF_TYPE_P2P = 16
LIF_TYPE_CORE = 17
LIF_TYPE_CRYPTO_SHARED = 18
LIF_TYPE_HOST_VIRTIO = 19
LIF_QUEUE_PURPOSE_NONE = 0
LIF_QUEUE_PURPOSE_ADMIN = 1
LIF_QUEUE_PURPOSE_TX = 2
LIF_QUEUE_PURPOSE_RX = 3
LIF_QUEUE_PURPOSE_SUBMISSION = 4
LIF_QUEUE_PURPOSE_RESPONSE = 5
LIF_QUEUE_PURPOSE_COMPLETION = 6
LIF_QUEUE_PURPOSE_EVENT = 7
LIF_QUEUE_PURPOSE_SERVICE = 8
SECURITY_RULE_ACTION_NONE = 0
SECURITY_RULE_ACTION_ALLOW = 1
SECURITY_RULE_ACTION_DENY = 2
SECURITY_POLICY_RULE_SCALE_NONE = 0
SECURITY_POLICY_RULE_SCALE_1K = 1
SECURITY_POLICY_RULE_SCALE_4K = 2
FW_POLICY_XPOSN_NONE = 0
FW_POLICY_XPOSN_GLOBAL_PRIORITY = 1
FW_POLICY_XPOSN_ANY_DENY = 2
FW_POLICY_XPOSN_LAST_MATCHED_RULE = 3
NAT_ACTION_NONE = 0
NAT_ACTION_STATIC = 1
NAT_ACTION_NAPT_PUBLIC = 2
NAT_ACTION_NAPT_SVC = 3
METER_CLASS_NONE = 0
METER_CLASS_1 = 1
METER_CLASS_2 = 2
METER_CLASS_3 = 3
METER_CLASS_4 = 4
METER_CLASS_5 = 5
METER_CLASS_6 = 6
METER_CLASS_7 = 7
METER_CLASS_8 = 8
METER_CLASS_9 = 9
METER_CLASS_10 = 10
METER_CLASS_11 = 11
METER_CLASS_12 = 12
METER_CLASS_13 = 13
METER_CLASS_14 = 14
METER_CLASS_15 = 15
ADDR_TYPE_NONE = 0
ADDR_TYPE_PUBLIC = 1
ADDR_TYPE_SERVICE = 2
ADMIN_STATE_NONE = 0
ADMIN_STATE_ENABLE = 1
ADMIN_STATE_DISABLE = 2
ROUTE_TYPE_NONE = 0
ROUTE_TYPE_OTHER = 1
ROUTE_TYPE_REJECT = 2
ROUTE_TYPE_LOCAL = 3
ROUTE_TYPE_REMOTE = 4
ROUTE_PROTO_NONE = 0
ROUTE_PROTO_LOCAL = 2
ROUTE_PROTO_STATIC = 3
ROUTE_PROTO_BGP = 14
HA_OWNER_NONE = 0
HA_OWNER_LOCAL = 1
HA_OWNER_PEER = 2
PORT_SPEED_NONE = 0
PORT_SPEED_10M = 1
PORT_SPEED_100M = 2
PORT_SPEED_1G = 3
PORT_SPEED_10G = 4
PORT_SPEED_25G = 5
PORT_SPEED_40G = 6
PORT_SPEED_50G = 7
PORT_SPEED_100G = 8
PORT_SPEED_200G = 9
PORT_SPEED_RSVD = 10
FLOW_ROLE_NONE = 0
FLOW_ROLE_INITIATOR = 1
FLOW_ROLE_RESPONDER = 2
FLOW_LOG_ACTION_NONE = 0
FLOW_LOG_ACTION_DISABLE = 1
FLOW_LOG_ACTION_ENABLE = 2
LEARN_MODE_NONE = 0
LEARN_MODE_NOTIFY = 1
LEARN_MODE_AUTO = 2
SERVICE_OP_NONE = 0
SERVICE_OP_CREATE = 1
SERVICE_OP_DELETE = 2
SERVICE_OP_UPDATE = 3
SERVICE_OP_READ = 4
SERVICE_OP_READ_STREAMING = 5
FLOW_ENTRY_TYPE_NONE = 0
FLOW_ENTRY_TYPE_VNIC = 1
FLOW_ENTRY_TYPE_NVME = 2
ACTION_TYPE_NONE = 0
ACTION_TYPE_DISABLE = 1
ACTION_TYPE_ENABLE = 2



_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='types.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=68,
)


_ID = _descriptor.Descriptor(
  name='Id',
  full_name='types.Id',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Id', full_name='types.Id.Id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=86,
)


_IPADDRESS = _descriptor.Descriptor(
  name='IPAddress',
  full_name='types.IPAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Af', full_name='types.IPAddress.Af', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\016meta:mandatory', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='V4Addr', full_name='types.IPAddress.V4Addr', index=1,
      number=2, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='V6Addr', full_name='types.IPAddress.V6Addr', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='v4_or_v6', full_name='types.IPAddress.v4_or_v6',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=88,
  serialized_end=192,
)


_IPPREFIX = _descriptor.Descriptor(
  name='IPPrefix',
  full_name='types.IPPrefix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Addr', full_name='types.IPPrefix.Addr', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Len', full_name='types.IPPrefix.Len', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\020meta:range=0-128', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=194,
  serialized_end=271,
)


_IPRANGE = _descriptor.Descriptor(
  name='IPRange',
  full_name='types.IPRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Low', full_name='types.IPRange.Low', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='High', full_name='types.IPRange.High', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=273,
  serialized_end=345,
)


_IPENTRY = _descriptor.Descriptor(
  name='IPEntry',
  full_name='types.IPEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Prefix', full_name='types.IPEntry.Prefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Range', full_name='types.IPEntry.Range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Tag', full_name='types.IPEntry.Tag', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\027meta:range:1-4294967294', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='ip_entry', full_name='types.IPEntry.ip_entry',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=348,
  serialized_end=486,
)


_IPLIST = _descriptor.Descriptor(
  name='IPList',
  full_name='types.IPList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='IPEntry', full_name='types.IPList.IPEntry', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=488,
  serialized_end=529,
)


_IPV4PREFIX = _descriptor.Descriptor(
  name='IPv4Prefix',
  full_name='types.IPv4Prefix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Addr', full_name='types.IPv4Prefix.Addr', index=0,
      number=1, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Len', full_name='types.IPv4Prefix.Len', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\017meta:range=0-32', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=531,
  serialized_end=591,
)


_IPV6PREFIX = _descriptor.Descriptor(
  name='IPv6Prefix',
  full_name='types.IPv6Prefix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Addr', full_name='types.IPv6Prefix.Addr', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Len', full_name='types.IPv6Prefix.Len', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\020meta:range=0-128', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=593,
  serialized_end=654,
)


_IPSUBNET = _descriptor.Descriptor(
  name='IPSubnet',
  full_name='types.IPSubnet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='IPv4Subnet', full_name='types.IPSubnet.IPv4Subnet', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='IPv6Subnet', full_name='types.IPSubnet.IPv6Subnet', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='subnet', full_name='types.IPSubnet.subnet',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=656,
  serialized_end=754,
)


_ADDRESSRANGE = _descriptor.Descriptor(
  name='AddressRange',
  full_name='types.AddressRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='IPv4Range', full_name='types.AddressRange.IPv4Range', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='IPv6Range', full_name='types.AddressRange.IPv6Range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='range', full_name='types.AddressRange.range',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=756,
  serialized_end=853,
)


_ADDRESS = _descriptor.Descriptor(
  name='Address',
  full_name='types.Address',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Prefix', full_name='types.Address.Prefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Range', full_name='types.Address.Range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='address', full_name='types.Address.address',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=855,
  serialized_end=948,
)


_PORTRANGE = _descriptor.Descriptor(
  name='PortRange',
  full_name='types.PortRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='PortLow', full_name='types.PortRange.PortLow', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\022meta:range:0-65535', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='PortHigh', full_name='types.PortRange.PortHigh', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\022meta:range:0-65535', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=950,
  serialized_end=1044,
)


_RULEL3MATCH = _descriptor.Descriptor(
  name='RuleL3Match',
  full_name='types.RuleL3Match',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ProtoNum', full_name='types.RuleL3Match.ProtoNum', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ProtoWildcard', full_name='types.RuleL3Match.ProtoWildcard', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='SrcPrefix', full_name='types.RuleL3Match.SrcPrefix', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='SrcRange', full_name='types.RuleL3Match.SrcRange', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='SrcTag', full_name='types.RuleL3Match.SrcTag', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\027meta:range:1-4294967294', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='SrcIPList', full_name='types.RuleL3Match.SrcIPList', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstPrefix', full_name='types.RuleL3Match.DstPrefix', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstRange', full_name='types.RuleL3Match.DstRange', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstTag', full_name='types.RuleL3Match.DstTag', index=8,
      number=9, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\027meta:range:1-4294967294', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstIPList', full_name='types.RuleL3Match.DstIPList', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='protomatch', full_name='types.RuleL3Match.protomatch',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='srcmatch', full_name='types.RuleL3Match.srcmatch',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='dstmatch', full_name='types.RuleL3Match.dstmatch',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1047,
  serialized_end=1489,
)


_PORTMATCH = _descriptor.Descriptor(
  name='PortMatch',
  full_name='types.PortMatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='SrcPortRange', full_name='types.PortMatch.SrcPortRange', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstPortRange', full_name='types.PortMatch.DstPortRange', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1491,
  serialized_end=1582,
)


_ICMPMATCH = _descriptor.Descriptor(
  name='ICMPMatch',
  full_name='types.ICMPMatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Type', full_name='types.ICMPMatch.Type', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\004Type', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='TypeWildcard', full_name='types.ICMPMatch.TypeWildcard', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\014TypeWildcard', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Code', full_name='types.ICMPMatch.Code', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\004Code', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='CodeWildcard', full_name='types.ICMPMatch.CodeWildcard', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\014CodeWildcard', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='typematch', full_name='types.ICMPMatch.typematch',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='codematch', full_name='types.ICMPMatch.codematch',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1585,
  serialized_end=1802,
)


_PORTLISTMATCH = _descriptor.Descriptor(
  name='PortListMatch',
  full_name='types.PortListMatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='SrcPortRange', full_name='types.PortListMatch.SrcPortRange', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstPortRange', full_name='types.PortListMatch.DstPortRange', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1804,
  serialized_end=1899,
)


_ICMPMATCHLIST = _descriptor.Descriptor(
  name='ICMPMatchList',
  full_name='types.ICMPMatchList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ICMPMatchList', full_name='types.ICMPMatchList.ICMPMatchList', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1901,
  serialized_end=1957,
)


_RULEL4MATCH = _descriptor.Descriptor(
  name='RuleL4Match',
  full_name='types.RuleL4Match',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Ports', full_name='types.RuleL4Match.Ports', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='TypeCode', full_name='types.RuleL4Match.TypeCode', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='PortList', full_name='types.RuleL4Match.PortList', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ICMPMatchList', full_name='types.RuleL4Match.ICMPMatchList', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='l4info', full_name='types.RuleL4Match.l4info',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1960,
  serialized_end=2145,
)


_RULEMATCH = _descriptor.Descriptor(
  name='RuleMatch',
  full_name='types.RuleMatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='L3Match', full_name='types.RuleMatch.L3Match', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='L4Match', full_name='types.RuleMatch.L4Match', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2147,
  serialized_end=2232,
)


_QINQ = _descriptor.Descriptor(
  name='QinQ',
  full_name='types.QinQ',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='STag', full_name='types.QinQ.STag', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\016meta:mandatory', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='CTag', full_name='types.QinQ.CTag', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\016meta:mandatory', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2234,
  serialized_end=2308,
)


_ENCAPVAL = _descriptor.Descriptor(
  name='EncapVal',
  full_name='types.EncapVal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='VlanId', full_name='types.EncapVal.VlanId', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='MPLSTag', full_name='types.EncapVal.MPLSTag', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Vnid', full_name='types.EncapVal.Vnid', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='QinQ', full_name='types.EncapVal.QinQ', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Vsid', full_name='types.EncapVal.Vsid', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='val', full_name='types.EncapVal.val',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2310,
  serialized_end=2425,
)


_ENCAP = _descriptor.Descriptor(
  name='Encap',
  full_name='types.Encap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Type', full_name='types.Encap.Type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Value', full_name='types.Encap.Value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2427,
  serialized_end=2498,
)


_BATCHCTXT = _descriptor.Descriptor(
  name='BatchCtxt',
  full_name='types.BatchCtxt',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='BatchCookie', full_name='types.BatchCtxt.BatchCookie', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2500,
  serialized_end=2532,
)


_MACFLOWKEY = _descriptor.Descriptor(
  name='MACFlowKey',
  full_name='types.MACFlowKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Subnet', full_name='types.MACFlowKey.Subnet', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='SrcMAC', full_name='types.MACFlowKey.SrcMAC', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstMAC', full_name='types.MACFlowKey.DstMAC', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='EtherType', full_name='types.MACFlowKey.EtherType', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2534,
  serialized_end=2613,
)


_FLOWL4INFO_TCPUDPINFO = _descriptor.Descriptor(
  name='TCPUDPInfo',
  full_name='types.FlowL4Info.TCPUDPInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='SrcPort', full_name='types.FlowL4Info.TCPUDPInfo.SrcPort', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstPort', full_name='types.FlowL4Info.TCPUDPInfo.DstPort', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2730,
  serialized_end=2776,
)

_FLOWL4INFO_ICMPINFO = _descriptor.Descriptor(
  name='ICMPInfo',
  full_name='types.FlowL4Info.ICMPInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Type', full_name='types.FlowL4Info.ICMPInfo.Type', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Code', full_name='types.FlowL4Info.ICMPInfo.Code', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Id', full_name='types.FlowL4Info.ICMPInfo.Id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2778,
  serialized_end=2828,
)

_FLOWL4INFO = _descriptor.Descriptor(
  name='FlowL4Info',
  full_name='types.FlowL4Info',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='TcpUdpInfo', full_name='types.FlowL4Info.TcpUdpInfo', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='IcmpInfo', full_name='types.FlowL4Info.IcmpInfo', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_FLOWL4INFO_TCPUDPINFO, _FLOWL4INFO_ICMPINFO, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='l4_info', full_name='types.FlowL4Info.l4_info',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2616,
  serialized_end=2839,
)


_IPFLOWKEY = _descriptor.Descriptor(
  name='IPFlowKey',
  full_name='types.IPFlowKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='VPCId', full_name='types.IPFlowKey.VPCId', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='SrcIP', full_name='types.IPFlowKey.SrcIP', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstIP', full_name='types.IPFlowKey.DstIP', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='IPProtocol', full_name='types.IPFlowKey.IPProtocol', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='L4Info', full_name='types.IPFlowKey.L4Info', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2842,
  serialized_end=2989,
)


_FLOWKEY = _descriptor.Descriptor(
  name='FlowKey',
  full_name='types.FlowKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='IPFlowKey', full_name='types.FlowKey.IPFlowKey', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='MACFlowKey', full_name='types.FlowKey.MACFlowKey', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='key', full_name='types.FlowKey.key',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2991,
  serialized_end=3087,
)


_SVCREWRITEINFO = _descriptor.Descriptor(
  name='SvcRewriteInfo',
  full_name='types.SvcRewriteInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='SrcPrefix', full_name='types.SvcRewriteInfo.SrcPrefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\016meta:mandatory', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstPrefix', full_name='types.SvcRewriteInfo.DstPrefix', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\016meta:mandatory', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstNatIP', full_name='types.SvcRewriteInfo.DstNatIP', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='SvcPortMap', full_name='types.SvcRewriteInfo.SvcPortMap', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='VNFTunnel', full_name='types.SvcRewriteInfo.VNFTunnel', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='UnderlaySrcNat', full_name='types.SvcRewriteInfo.UnderlaySrcNat', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3090,
  serialized_end=3317,
)


_DROPNEXTHOP = _descriptor.Descriptor(
  name='DropNexthop',
  full_name='types.DropNexthop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3319,
  serialized_end=3332,
)


_FLOWLOGSPEC = _descriptor.Descriptor(
  name='FlowLogSpec',
  full_name='types.FlowLogSpec',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='LogOnCreate', full_name='types.FlowLogSpec.LogOnCreate', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\022meta:default=false', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='LogOnDelete', full_name='types.FlowLogSpec.LogOnDelete', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\022meta:default=false', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='LogLongLivedFlows', full_name='types.FlowLogSpec.LogLongLivedFlows', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\022meta:default=false', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3335,
  serialized_end=3489,
)


_LEARNSOURCE = _descriptor.Descriptor(
  name='LearnSource',
  full_name='types.LearnSource',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ArpLearnEn', full_name='types.LearnSource.ArpLearnEn', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\021meta:default=true', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DhcpLearnEn', full_name='types.LearnSource.DhcpLearnEn', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\021meta:default=true', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DataPktLearnEn', full_name='types.LearnSource.DataPktLearnEn', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\021meta:default=true', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3492,
  serialized_end=3639,
)


_LEARNSPEC = _descriptor.Descriptor(
  name='LearnSpec',
  full_name='types.LearnSpec',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='LearnMode', full_name='types.LearnSpec.LearnMode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\034meta:default=LEARN_MODE_NONE', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='LearnAgeTimeout', full_name='types.LearnSpec.LearnAgeTimeout', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037$meta:range:30-86400,meta:default=300', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='LearnSource', full_name='types.LearnSpec.LearnSource', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037\032LearnMode!=LEARN_MODE_NONE', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3642,
  serialized_end=3864,
)


_SERVICEREQUESTMESSAGE = _descriptor.Descriptor(
  name='ServiceRequestMessage',
  full_name='types.ServiceRequestMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ConfigOp', full_name='types.ServiceRequestMessage.ConfigOp', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ConfigMsg', full_name='types.ServiceRequestMessage.ConfigMsg', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3866,
  serialized_end=3973,
)


_SERVICERESPONSEMESSAGE = _descriptor.Descriptor(
  name='ServiceResponseMessage',
  full_name='types.ServiceResponseMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ApiStatus', full_name='types.ServiceResponseMessage.ApiStatus', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Response', full_name='types.ServiceResponseMessage.Response', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3975,
  serialized_end=4076,
)


_COUNTER = _descriptor.Descriptor(
  name='Counter',
  full_name='types.Counter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Name', full_name='types.Counter.Name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\004Name', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Value', full_name='types.Counter.Value', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\005Value', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4078,
  serialized_end=4137,
)


_BGPCOMMUNITY = _descriptor.Descriptor(
  name='BGPCommunity',
  full_name='types.BGPCommunity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Asn', full_name='types.BGPCommunity.Asn', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037!meta:range:0-65535,meta:default=0', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Community', full_name='types.BGPCommunity.Community', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037!meta:range:0-65535,meta:default=0', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4139,
  serialized_end=4263,
)


_NATACTION = _descriptor.Descriptor(
  name='NATAction',
  full_name='types.NATAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='SrcNatAction', full_name='types.NATAction.SrcNatAction', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='DstNatIP', full_name='types.NATAction.DstNatIP', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='PortReuse', full_name='types.NATAction.PortReuse', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\362\336\037Wmeta:constraints=SrcNatAction==NAT_ACTION_NAPT_PUBLIC|SrcNatAction==NAT_ACTION_NAPT_SVC', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4266,
  serialized_end=4465,
)

_IPADDRESS.fields_by_name['Af'].enum_type = _IPAF
_IPADDRESS.oneofs_by_name['v4_or_v6'].fields.append(
  _IPADDRESS.fields_by_name['V4Addr'])
_IPADDRESS.fields_by_name['V4Addr'].containing_oneof = _IPADDRESS.oneofs_by_name['v4_or_v6']
_IPADDRESS.oneofs_by_name['v4_or_v6'].fields.append(
  _IPADDRESS.fields_by_name['V6Addr'])
_IPADDRESS.fields_by_name['V6Addr'].containing_oneof = _IPADDRESS.oneofs_by_name['v4_or_v6']
_IPPREFIX.fields_by_name['Addr'].message_type = _IPADDRESS
_IPRANGE.fields_by_name['Low'].message_type = _IPADDRESS
_IPRANGE.fields_by_name['High'].message_type = _IPADDRESS
_IPENTRY.fields_by_name['Prefix'].message_type = _IPPREFIX
_IPENTRY.fields_by_name['Range'].message_type = _ADDRESSRANGE
_IPENTRY.oneofs_by_name['ip_entry'].fields.append(
  _IPENTRY.fields_by_name['Prefix'])
_IPENTRY.fields_by_name['Prefix'].containing_oneof = _IPENTRY.oneofs_by_name['ip_entry']
_IPENTRY.oneofs_by_name['ip_entry'].fields.append(
  _IPENTRY.fields_by_name['Range'])
_IPENTRY.fields_by_name['Range'].containing_oneof = _IPENTRY.oneofs_by_name['ip_entry']
_IPENTRY.oneofs_by_name['ip_entry'].fields.append(
  _IPENTRY.fields_by_name['Tag'])
_IPENTRY.fields_by_name['Tag'].containing_oneof = _IPENTRY.oneofs_by_name['ip_entry']
_IPLIST.fields_by_name['IPEntry'].message_type = _IPENTRY
_IPSUBNET.fields_by_name['IPv4Subnet'].message_type = _IPPREFIX
_IPSUBNET.fields_by_name['IPv6Subnet'].message_type = _IPPREFIX
_IPSUBNET.oneofs_by_name['subnet'].fields.append(
  _IPSUBNET.fields_by_name['IPv4Subnet'])
_IPSUBNET.fields_by_name['IPv4Subnet'].containing_oneof = _IPSUBNET.oneofs_by_name['subnet']
_IPSUBNET.oneofs_by_name['subnet'].fields.append(
  _IPSUBNET.fields_by_name['IPv6Subnet'])
_IPSUBNET.fields_by_name['IPv6Subnet'].containing_oneof = _IPSUBNET.oneofs_by_name['subnet']
_ADDRESSRANGE.fields_by_name['IPv4Range'].message_type = _IPRANGE
_ADDRESSRANGE.fields_by_name['IPv6Range'].message_type = _IPRANGE
_ADDRESSRANGE.oneofs_by_name['range'].fields.append(
  _ADDRESSRANGE.fields_by_name['IPv4Range'])
_ADDRESSRANGE.fields_by_name['IPv4Range'].containing_oneof = _ADDRESSRANGE.oneofs_by_name['range']
_ADDRESSRANGE.oneofs_by_name['range'].fields.append(
  _ADDRESSRANGE.fields_by_name['IPv6Range'])
_ADDRESSRANGE.fields_by_name['IPv6Range'].containing_oneof = _ADDRESSRANGE.oneofs_by_name['range']
_ADDRESS.fields_by_name['Prefix'].message_type = _IPSUBNET
_ADDRESS.fields_by_name['Range'].message_type = _ADDRESSRANGE
_ADDRESS.oneofs_by_name['address'].fields.append(
  _ADDRESS.fields_by_name['Prefix'])
_ADDRESS.fields_by_name['Prefix'].containing_oneof = _ADDRESS.oneofs_by_name['address']
_ADDRESS.oneofs_by_name['address'].fields.append(
  _ADDRESS.fields_by_name['Range'])
_ADDRESS.fields_by_name['Range'].containing_oneof = _ADDRESS.oneofs_by_name['address']
_RULEL3MATCH.fields_by_name['ProtoWildcard'].enum_type = _WILDCARDMATCH
_RULEL3MATCH.fields_by_name['SrcPrefix'].message_type = _IPPREFIX
_RULEL3MATCH.fields_by_name['SrcRange'].message_type = _ADDRESSRANGE
_RULEL3MATCH.fields_by_name['SrcIPList'].message_type = _IPLIST
_RULEL3MATCH.fields_by_name['DstPrefix'].message_type = _IPPREFIX
_RULEL3MATCH.fields_by_name['DstRange'].message_type = _ADDRESSRANGE
_RULEL3MATCH.fields_by_name['DstIPList'].message_type = _IPLIST
_RULEL3MATCH.oneofs_by_name['protomatch'].fields.append(
  _RULEL3MATCH.fields_by_name['ProtoNum'])
_RULEL3MATCH.fields_by_name['ProtoNum'].containing_oneof = _RULEL3MATCH.oneofs_by_name['protomatch']
_RULEL3MATCH.oneofs_by_name['protomatch'].fields.append(
  _RULEL3MATCH.fields_by_name['ProtoWildcard'])
_RULEL3MATCH.fields_by_name['ProtoWildcard'].containing_oneof = _RULEL3MATCH.oneofs_by_name['protomatch']
_RULEL3MATCH.oneofs_by_name['srcmatch'].fields.append(
  _RULEL3MATCH.fields_by_name['SrcPrefix'])
_RULEL3MATCH.fields_by_name['SrcPrefix'].containing_oneof = _RULEL3MATCH.oneofs_by_name['srcmatch']
_RULEL3MATCH.oneofs_by_name['srcmatch'].fields.append(
  _RULEL3MATCH.fields_by_name['SrcRange'])
_RULEL3MATCH.fields_by_name['SrcRange'].containing_oneof = _RULEL3MATCH.oneofs_by_name['srcmatch']
_RULEL3MATCH.oneofs_by_name['srcmatch'].fields.append(
  _RULEL3MATCH.fields_by_name['SrcTag'])
_RULEL3MATCH.fields_by_name['SrcTag'].containing_oneof = _RULEL3MATCH.oneofs_by_name['srcmatch']
_RULEL3MATCH.oneofs_by_name['srcmatch'].fields.append(
  _RULEL3MATCH.fields_by_name['SrcIPList'])
_RULEL3MATCH.fields_by_name['SrcIPList'].containing_oneof = _RULEL3MATCH.oneofs_by_name['srcmatch']
_RULEL3MATCH.oneofs_by_name['dstmatch'].fields.append(
  _RULEL3MATCH.fields_by_name['DstPrefix'])
_RULEL3MATCH.fields_by_name['DstPrefix'].containing_oneof = _RULEL3MATCH.oneofs_by_name['dstmatch']
_RULEL3MATCH.oneofs_by_name['dstmatch'].fields.append(
  _RULEL3MATCH.fields_by_name['DstRange'])
_RULEL3MATCH.fields_by_name['DstRange'].containing_oneof = _RULEL3MATCH.oneofs_by_name['dstmatch']
_RULEL3MATCH.oneofs_by_name['dstmatch'].fields.append(
  _RULEL3MATCH.fields_by_name['DstTag'])
_RULEL3MATCH.fields_by_name['DstTag'].containing_oneof = _RULEL3MATCH.oneofs_by_name['dstmatch']
_RULEL3MATCH.oneofs_by_name['dstmatch'].fields.append(
  _RULEL3MATCH.fields_by_name['DstIPList'])
_RULEL3MATCH.fields_by_name['DstIPList'].containing_oneof = _RULEL3MATCH.oneofs_by_name['dstmatch']
_PORTMATCH.fields_by_name['SrcPortRange'].message_type = _PORTRANGE
_PORTMATCH.fields_by_name['DstPortRange'].message_type = _PORTRANGE
_ICMPMATCH.fields_by_name['TypeWildcard'].enum_type = _WILDCARDMATCH
_ICMPMATCH.fields_by_name['CodeWildcard'].enum_type = _WILDCARDMATCH
_ICMPMATCH.oneofs_by_name['typematch'].fields.append(
  _ICMPMATCH.fields_by_name['Type'])
_ICMPMATCH.fields_by_name['Type'].containing_oneof = _ICMPMATCH.oneofs_by_name['typematch']
_ICMPMATCH.oneofs_by_name['typematch'].fields.append(
  _ICMPMATCH.fields_by_name['TypeWildcard'])
_ICMPMATCH.fields_by_name['TypeWildcard'].containing_oneof = _ICMPMATCH.oneofs_by_name['typematch']
_ICMPMATCH.oneofs_by_name['codematch'].fields.append(
  _ICMPMATCH.fields_by_name['Code'])
_ICMPMATCH.fields_by_name['Code'].containing_oneof = _ICMPMATCH.oneofs_by_name['codematch']
_ICMPMATCH.oneofs_by_name['codematch'].fields.append(
  _ICMPMATCH.fields_by_name['CodeWildcard'])
_ICMPMATCH.fields_by_name['CodeWildcard'].containing_oneof = _ICMPMATCH.oneofs_by_name['codematch']
_PORTLISTMATCH.fields_by_name['SrcPortRange'].message_type = _PORTRANGE
_PORTLISTMATCH.fields_by_name['DstPortRange'].message_type = _PORTRANGE
_ICMPMATCHLIST.fields_by_name['ICMPMatchList'].message_type = _ICMPMATCH
_RULEL4MATCH.fields_by_name['Ports'].message_type = _PORTMATCH
_RULEL4MATCH.fields_by_name['TypeCode'].message_type = _ICMPMATCH
_RULEL4MATCH.fields_by_name['PortList'].message_type = _PORTLISTMATCH
_RULEL4MATCH.fields_by_name['ICMPMatchList'].message_type = _ICMPMATCHLIST
_RULEL4MATCH.oneofs_by_name['l4info'].fields.append(
  _RULEL4MATCH.fields_by_name['Ports'])
_RULEL4MATCH.fields_by_name['Ports'].containing_oneof = _RULEL4MATCH.oneofs_by_name['l4info']
_RULEL4MATCH.oneofs_by_name['l4info'].fields.append(
  _RULEL4MATCH.fields_by_name['TypeCode'])
_RULEL4MATCH.fields_by_name['TypeCode'].containing_oneof = _RULEL4MATCH.oneofs_by_name['l4info']
_RULEL4MATCH.oneofs_by_name['l4info'].fields.append(
  _RULEL4MATCH.fields_by_name['PortList'])
_RULEL4MATCH.fields_by_name['PortList'].containing_oneof = _RULEL4MATCH.oneofs_by_name['l4info']
_RULEL4MATCH.oneofs_by_name['l4info'].fields.append(
  _RULEL4MATCH.fields_by_name['ICMPMatchList'])
_RULEL4MATCH.fields_by_name['ICMPMatchList'].containing_oneof = _RULEL4MATCH.oneofs_by_name['l4info']
_RULEMATCH.fields_by_name['L3Match'].message_type = _RULEL3MATCH
_RULEMATCH.fields_by_name['L4Match'].message_type = _RULEL4MATCH
_ENCAPVAL.fields_by_name['QinQ'].message_type = _QINQ
_ENCAPVAL.oneofs_by_name['val'].fields.append(
  _ENCAPVAL.fields_by_name['VlanId'])
_ENCAPVAL.fields_by_name['VlanId'].containing_oneof = _ENCAPVAL.oneofs_by_name['val']
_ENCAPVAL.oneofs_by_name['val'].fields.append(
  _ENCAPVAL.fields_by_name['MPLSTag'])
_ENCAPVAL.fields_by_name['MPLSTag'].containing_oneof = _ENCAPVAL.oneofs_by_name['val']
_ENCAPVAL.oneofs_by_name['val'].fields.append(
  _ENCAPVAL.fields_by_name['Vnid'])
_ENCAPVAL.fields_by_name['Vnid'].containing_oneof = _ENCAPVAL.oneofs_by_name['val']
_ENCAPVAL.oneofs_by_name['val'].fields.append(
  _ENCAPVAL.fields_by_name['QinQ'])
_ENCAPVAL.fields_by_name['QinQ'].containing_oneof = _ENCAPVAL.oneofs_by_name['val']
_ENCAPVAL.oneofs_by_name['val'].fields.append(
  _ENCAPVAL.fields_by_name['Vsid'])
_ENCAPVAL.fields_by_name['Vsid'].containing_oneof = _ENCAPVAL.oneofs_by_name['val']
_ENCAP.fields_by_name['Type'].enum_type = _ENCAPTYPE
_ENCAP.fields_by_name['Value'].message_type = _ENCAPVAL
_FLOWL4INFO_TCPUDPINFO.containing_type = _FLOWL4INFO
_FLOWL4INFO_ICMPINFO.containing_type = _FLOWL4INFO
_FLOWL4INFO.fields_by_name['TcpUdpInfo'].message_type = _FLOWL4INFO_TCPUDPINFO
_FLOWL4INFO.fields_by_name['IcmpInfo'].message_type = _FLOWL4INFO_ICMPINFO
_FLOWL4INFO.oneofs_by_name['l4_info'].fields.append(
  _FLOWL4INFO.fields_by_name['TcpUdpInfo'])
_FLOWL4INFO.fields_by_name['TcpUdpInfo'].containing_oneof = _FLOWL4INFO.oneofs_by_name['l4_info']
_FLOWL4INFO.oneofs_by_name['l4_info'].fields.append(
  _FLOWL4INFO.fields_by_name['IcmpInfo'])
_FLOWL4INFO.fields_by_name['IcmpInfo'].containing_oneof = _FLOWL4INFO.oneofs_by_name['l4_info']
_IPFLOWKEY.fields_by_name['SrcIP'].message_type = _IPADDRESS
_IPFLOWKEY.fields_by_name['DstIP'].message_type = _IPADDRESS
_IPFLOWKEY.fields_by_name['L4Info'].message_type = _FLOWL4INFO
_FLOWKEY.fields_by_name['IPFlowKey'].message_type = _IPFLOWKEY
_FLOWKEY.fields_by_name['MACFlowKey'].message_type = _MACFLOWKEY
_FLOWKEY.oneofs_by_name['key'].fields.append(
  _FLOWKEY.fields_by_name['IPFlowKey'])
_FLOWKEY.fields_by_name['IPFlowKey'].containing_oneof = _FLOWKEY.oneofs_by_name['key']
_FLOWKEY.oneofs_by_name['key'].fields.append(
  _FLOWKEY.fields_by_name['MACFlowKey'])
_FLOWKEY.fields_by_name['MACFlowKey'].containing_oneof = _FLOWKEY.oneofs_by_name['key']
_SVCREWRITEINFO.fields_by_name['SrcPrefix'].message_type = _IPPREFIX
_SVCREWRITEINFO.fields_by_name['DstPrefix'].message_type = _IPPREFIX
_SVCREWRITEINFO.fields_by_name['DstNatIP'].message_type = _IPADDRESS
_LEARNSPEC.fields_by_name['LearnMode'].enum_type = _LEARNMODE
_LEARNSPEC.fields_by_name['LearnSource'].message_type = _LEARNSOURCE
_SERVICEREQUESTMESSAGE.fields_by_name['ConfigOp'].enum_type = _SERVICEREQUESTOP
_SERVICEREQUESTMESSAGE.fields_by_name['ConfigMsg'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_SERVICERESPONSEMESSAGE.fields_by_name['ApiStatus'].enum_type = _APISTATUS
_SERVICERESPONSEMESSAGE.fields_by_name['Response'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_NATACTION.fields_by_name['SrcNatAction'].enum_type = _NATACTION
_NATACTION.fields_by_name['DstNatIP'].message_type = _IPADDRESS
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['Id'] = _ID
DESCRIPTOR.message_types_by_name['IPAddress'] = _IPADDRESS
DESCRIPTOR.message_types_by_name['IPPrefix'] = _IPPREFIX
DESCRIPTOR.message_types_by_name['IPRange'] = _IPRANGE
DESCRIPTOR.message_types_by_name['IPEntry'] = _IPENTRY
DESCRIPTOR.message_types_by_name['IPList'] = _IPLIST
DESCRIPTOR.message_types_by_name['IPv4Prefix'] = _IPV4PREFIX
DESCRIPTOR.message_types_by_name['IPv6Prefix'] = _IPV6PREFIX
DESCRIPTOR.message_types_by_name['IPSubnet'] = _IPSUBNET
DESCRIPTOR.message_types_by_name['AddressRange'] = _ADDRESSRANGE
DESCRIPTOR.message_types_by_name['Address'] = _ADDRESS
DESCRIPTOR.message_types_by_name['PortRange'] = _PORTRANGE
DESCRIPTOR.message_types_by_name['RuleL3Match'] = _RULEL3MATCH
DESCRIPTOR.message_types_by_name['PortMatch'] = _PORTMATCH
DESCRIPTOR.message_types_by_name['ICMPMatch'] = _ICMPMATCH
DESCRIPTOR.message_types_by_name['PortListMatch'] = _PORTLISTMATCH
DESCRIPTOR.message_types_by_name['ICMPMatchList'] = _ICMPMATCHLIST
DESCRIPTOR.message_types_by_name['RuleL4Match'] = _RULEL4MATCH
DESCRIPTOR.message_types_by_name['RuleMatch'] = _RULEMATCH
DESCRIPTOR.message_types_by_name['QinQ'] = _QINQ
DESCRIPTOR.message_types_by_name['EncapVal'] = _ENCAPVAL
DESCRIPTOR.message_types_by_name['Encap'] = _ENCAP
DESCRIPTOR.message_types_by_name['BatchCtxt'] = _BATCHCTXT
DESCRIPTOR.message_types_by_name['MACFlowKey'] = _MACFLOWKEY
DESCRIPTOR.message_types_by_name['FlowL4Info'] = _FLOWL4INFO
DESCRIPTOR.message_types_by_name['IPFlowKey'] = _IPFLOWKEY
DESCRIPTOR.message_types_by_name['FlowKey'] = _FLOWKEY
DESCRIPTOR.message_types_by_name['SvcRewriteInfo'] = _SVCREWRITEINFO
DESCRIPTOR.message_types_by_name['DropNexthop'] = _DROPNEXTHOP
DESCRIPTOR.message_types_by_name['FlowLogSpec'] = _FLOWLOGSPEC
DESCRIPTOR.message_types_by_name['LearnSource'] = _LEARNSOURCE
DESCRIPTOR.message_types_by_name['LearnSpec'] = _LEARNSPEC
DESCRIPTOR.message_types_by_name['ServiceRequestMessage'] = _SERVICEREQUESTMESSAGE
DESCRIPTOR.message_types_by_name['ServiceResponseMessage'] = _SERVICERESPONSEMESSAGE
DESCRIPTOR.message_types_by_name['Counter'] = _COUNTER
DESCRIPTOR.message_types_by_name['BGPCommunity'] = _BGPCOMMUNITY
DESCRIPTOR.message_types_by_name['NATAction'] = _NATACTION
DESCRIPTOR.enum_types_by_name['ApiStatus'] = _APISTATUS
DESCRIPTOR.enum_types_by_name['ErrorCode'] = _ERRORCODE
DESCRIPTOR.enum_types_by_name['SwDatapathSyncStatus'] = _SWDATAPATHSYNCSTATUS
DESCRIPTOR.enum_types_by_name['AsicType'] = _ASICTYPE
DESCRIPTOR.enum_types_by_name['IPAF'] = _IPAF
DESCRIPTOR.enum_types_by_name['WildcardMatch'] = _WILDCARDMATCH
DESCRIPTOR.enum_types_by_name['PolicyDir'] = _POLICYDIR
DESCRIPTOR.enum_types_by_name['EncapType'] = _ENCAPTYPE
DESCRIPTOR.enum_types_by_name['LifType'] = _LIFTYPE
DESCRIPTOR.enum_types_by_name['LifQueuePurpose'] = _LIFQUEUEPURPOSE
DESCRIPTOR.enum_types_by_name['SecurityRuleAction'] = _SECURITYRULEACTION
DESCRIPTOR.enum_types_by_name['SecurityPolicyRuleScale'] = _SECURITYPOLICYRULESCALE
DESCRIPTOR.enum_types_by_name['FwPolicyXposn'] = _FWPOLICYXPOSN
DESCRIPTOR.enum_types_by_name['NatAction'] = _NATACTION
DESCRIPTOR.enum_types_by_name['MeterClass'] = _METERCLASS
DESCRIPTOR.enum_types_by_name['AddressType'] = _ADDRESSTYPE
DESCRIPTOR.enum_types_by_name['AdminState'] = _ADMINSTATE
DESCRIPTOR.enum_types_by_name['RouteType'] = _ROUTETYPE
DESCRIPTOR.enum_types_by_name['RouteProtocol'] = _ROUTEPROTOCOL
DESCRIPTOR.enum_types_by_name['HAOwner'] = _HAOWNER
DESCRIPTOR.enum_types_by_name['PortSpeed'] = _PORTSPEED
DESCRIPTOR.enum_types_by_name['FlowRole'] = _FLOWROLE
DESCRIPTOR.enum_types_by_name['FlowLogAction'] = _FLOWLOGACTION
DESCRIPTOR.enum_types_by_name['LearnMode'] = _LEARNMODE
DESCRIPTOR.enum_types_by_name['ServiceRequestOp'] = _SERVICEREQUESTOP
DESCRIPTOR.enum_types_by_name['FlowEntryType'] = _FLOWENTRYTYPE
DESCRIPTOR.enum_types_by_name['ActionType'] = _ACTIONTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.Empty)
  })
_sym_db.RegisterMessage(Empty)

Id = _reflection.GeneratedProtocolMessageType('Id', (_message.Message,), {
  'DESCRIPTOR' : _ID,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.Id)
  })
_sym_db.RegisterMessage(Id)

IPAddress = _reflection.GeneratedProtocolMessageType('IPAddress', (_message.Message,), {
  'DESCRIPTOR' : _IPADDRESS,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.IPAddress)
  })
_sym_db.RegisterMessage(IPAddress)

IPPrefix = _reflection.GeneratedProtocolMessageType('IPPrefix', (_message.Message,), {
  'DESCRIPTOR' : _IPPREFIX,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.IPPrefix)
  })
_sym_db.RegisterMessage(IPPrefix)

IPRange = _reflection.GeneratedProtocolMessageType('IPRange', (_message.Message,), {
  'DESCRIPTOR' : _IPRANGE,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.IPRange)
  })
_sym_db.RegisterMessage(IPRange)

IPEntry = _reflection.GeneratedProtocolMessageType('IPEntry', (_message.Message,), {
  'DESCRIPTOR' : _IPENTRY,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.IPEntry)
  })
_sym_db.RegisterMessage(IPEntry)

IPList = _reflection.GeneratedProtocolMessageType('IPList', (_message.Message,), {
  'DESCRIPTOR' : _IPLIST,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.IPList)
  })
_sym_db.RegisterMessage(IPList)

IPv4Prefix = _reflection.GeneratedProtocolMessageType('IPv4Prefix', (_message.Message,), {
  'DESCRIPTOR' : _IPV4PREFIX,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.IPv4Prefix)
  })
_sym_db.RegisterMessage(IPv4Prefix)

IPv6Prefix = _reflection.GeneratedProtocolMessageType('IPv6Prefix', (_message.Message,), {
  'DESCRIPTOR' : _IPV6PREFIX,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.IPv6Prefix)
  })
_sym_db.RegisterMessage(IPv6Prefix)

IPSubnet = _reflection.GeneratedProtocolMessageType('IPSubnet', (_message.Message,), {
  'DESCRIPTOR' : _IPSUBNET,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.IPSubnet)
  })
_sym_db.RegisterMessage(IPSubnet)

AddressRange = _reflection.GeneratedProtocolMessageType('AddressRange', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESSRANGE,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.AddressRange)
  })
_sym_db.RegisterMessage(AddressRange)

Address = _reflection.GeneratedProtocolMessageType('Address', (_message.Message,), {
  'DESCRIPTOR' : _ADDRESS,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.Address)
  })
_sym_db.RegisterMessage(Address)

PortRange = _reflection.GeneratedProtocolMessageType('PortRange', (_message.Message,), {
  'DESCRIPTOR' : _PORTRANGE,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.PortRange)
  })
_sym_db.RegisterMessage(PortRange)

RuleL3Match = _reflection.GeneratedProtocolMessageType('RuleL3Match', (_message.Message,), {
  'DESCRIPTOR' : _RULEL3MATCH,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.RuleL3Match)
  })
_sym_db.RegisterMessage(RuleL3Match)

PortMatch = _reflection.GeneratedProtocolMessageType('PortMatch', (_message.Message,), {
  'DESCRIPTOR' : _PORTMATCH,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.PortMatch)
  })
_sym_db.RegisterMessage(PortMatch)

ICMPMatch = _reflection.GeneratedProtocolMessageType('ICMPMatch', (_message.Message,), {
  'DESCRIPTOR' : _ICMPMATCH,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.ICMPMatch)
  })
_sym_db.RegisterMessage(ICMPMatch)

PortListMatch = _reflection.GeneratedProtocolMessageType('PortListMatch', (_message.Message,), {
  'DESCRIPTOR' : _PORTLISTMATCH,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.PortListMatch)
  })
_sym_db.RegisterMessage(PortListMatch)

ICMPMatchList = _reflection.GeneratedProtocolMessageType('ICMPMatchList', (_message.Message,), {
  'DESCRIPTOR' : _ICMPMATCHLIST,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.ICMPMatchList)
  })
_sym_db.RegisterMessage(ICMPMatchList)

RuleL4Match = _reflection.GeneratedProtocolMessageType('RuleL4Match', (_message.Message,), {
  'DESCRIPTOR' : _RULEL4MATCH,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.RuleL4Match)
  })
_sym_db.RegisterMessage(RuleL4Match)

RuleMatch = _reflection.GeneratedProtocolMessageType('RuleMatch', (_message.Message,), {
  'DESCRIPTOR' : _RULEMATCH,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.RuleMatch)
  })
_sym_db.RegisterMessage(RuleMatch)

QinQ = _reflection.GeneratedProtocolMessageType('QinQ', (_message.Message,), {
  'DESCRIPTOR' : _QINQ,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.QinQ)
  })
_sym_db.RegisterMessage(QinQ)

EncapVal = _reflection.GeneratedProtocolMessageType('EncapVal', (_message.Message,), {
  'DESCRIPTOR' : _ENCAPVAL,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.EncapVal)
  })
_sym_db.RegisterMessage(EncapVal)

Encap = _reflection.GeneratedProtocolMessageType('Encap', (_message.Message,), {
  'DESCRIPTOR' : _ENCAP,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.Encap)
  })
_sym_db.RegisterMessage(Encap)

BatchCtxt = _reflection.GeneratedProtocolMessageType('BatchCtxt', (_message.Message,), {
  'DESCRIPTOR' : _BATCHCTXT,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.BatchCtxt)
  })
_sym_db.RegisterMessage(BatchCtxt)

MACFlowKey = _reflection.GeneratedProtocolMessageType('MACFlowKey', (_message.Message,), {
  'DESCRIPTOR' : _MACFLOWKEY,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.MACFlowKey)
  })
_sym_db.RegisterMessage(MACFlowKey)

FlowL4Info = _reflection.GeneratedProtocolMessageType('FlowL4Info', (_message.Message,), {

  'TCPUDPInfo' : _reflection.GeneratedProtocolMessageType('TCPUDPInfo', (_message.Message,), {
    'DESCRIPTOR' : _FLOWL4INFO_TCPUDPINFO,
    '__module__' : 'types_pb2'
    # @@protoc_insertion_point(class_scope:types.FlowL4Info.TCPUDPInfo)
    })
  ,

  'ICMPInfo' : _reflection.GeneratedProtocolMessageType('ICMPInfo', (_message.Message,), {
    'DESCRIPTOR' : _FLOWL4INFO_ICMPINFO,
    '__module__' : 'types_pb2'
    # @@protoc_insertion_point(class_scope:types.FlowL4Info.ICMPInfo)
    })
  ,
  'DESCRIPTOR' : _FLOWL4INFO,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.FlowL4Info)
  })
_sym_db.RegisterMessage(FlowL4Info)
_sym_db.RegisterMessage(FlowL4Info.TCPUDPInfo)
_sym_db.RegisterMessage(FlowL4Info.ICMPInfo)

IPFlowKey = _reflection.GeneratedProtocolMessageType('IPFlowKey', (_message.Message,), {
  'DESCRIPTOR' : _IPFLOWKEY,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.IPFlowKey)
  })
_sym_db.RegisterMessage(IPFlowKey)

FlowKey = _reflection.GeneratedProtocolMessageType('FlowKey', (_message.Message,), {
  'DESCRIPTOR' : _FLOWKEY,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.FlowKey)
  })
_sym_db.RegisterMessage(FlowKey)

SvcRewriteInfo = _reflection.GeneratedProtocolMessageType('SvcRewriteInfo', (_message.Message,), {
  'DESCRIPTOR' : _SVCREWRITEINFO,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.SvcRewriteInfo)
  })
_sym_db.RegisterMessage(SvcRewriteInfo)

DropNexthop = _reflection.GeneratedProtocolMessageType('DropNexthop', (_message.Message,), {
  'DESCRIPTOR' : _DROPNEXTHOP,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.DropNexthop)
  })
_sym_db.RegisterMessage(DropNexthop)

FlowLogSpec = _reflection.GeneratedProtocolMessageType('FlowLogSpec', (_message.Message,), {
  'DESCRIPTOR' : _FLOWLOGSPEC,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.FlowLogSpec)
  })
_sym_db.RegisterMessage(FlowLogSpec)

LearnSource = _reflection.GeneratedProtocolMessageType('LearnSource', (_message.Message,), {
  'DESCRIPTOR' : _LEARNSOURCE,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.LearnSource)
  })
_sym_db.RegisterMessage(LearnSource)

LearnSpec = _reflection.GeneratedProtocolMessageType('LearnSpec', (_message.Message,), {
  'DESCRIPTOR' : _LEARNSPEC,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.LearnSpec)
  })
_sym_db.RegisterMessage(LearnSpec)

ServiceRequestMessage = _reflection.GeneratedProtocolMessageType('ServiceRequestMessage', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEREQUESTMESSAGE,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.ServiceRequestMessage)
  })
_sym_db.RegisterMessage(ServiceRequestMessage)

ServiceResponseMessage = _reflection.GeneratedProtocolMessageType('ServiceResponseMessage', (_message.Message,), {
  'DESCRIPTOR' : _SERVICERESPONSEMESSAGE,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.ServiceResponseMessage)
  })
_sym_db.RegisterMessage(ServiceResponseMessage)

Counter = _reflection.GeneratedProtocolMessageType('Counter', (_message.Message,), {
  'DESCRIPTOR' : _COUNTER,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.Counter)
  })
_sym_db.RegisterMessage(Counter)

BGPCommunity = _reflection.GeneratedProtocolMessageType('BGPCommunity', (_message.Message,), {
  'DESCRIPTOR' : _BGPCOMMUNITY,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.BGPCommunity)
  })
_sym_db.RegisterMessage(BGPCommunity)

NATAction = _reflection.GeneratedProtocolMessageType('NATAction', (_message.Message,), {
  'DESCRIPTOR' : _NATACTION,
  '__module__' : 'types_pb2'
  # @@protoc_insertion_point(class_scope:types.NATAction)
  })
_sym_db.RegisterMessage(NATAction)


DESCRIPTOR._options = None
_IPADDRESS.fields_by_name['Af']._options = None
_IPPREFIX.fields_by_name['Len']._options = None
_IPENTRY.fields_by_name['Tag']._options = None
_IPV4PREFIX.fields_by_name['Len']._options = None
_IPV6PREFIX.fields_by_name['Len']._options = None
_PORTRANGE.fields_by_name['PortLow']._options = None
_PORTRANGE.fields_by_name['PortHigh']._options = None
_RULEL3MATCH.fields_by_name['SrcTag']._options = None
_RULEL3MATCH.fields_by_name['DstTag']._options = None
_ICMPMATCH.fields_by_name['Type']._options = None
_ICMPMATCH.fields_by_name['TypeWildcard']._options = None
_ICMPMATCH.fields_by_name['Code']._options = None
_ICMPMATCH.fields_by_name['CodeWildcard']._options = None
_QINQ.fields_by_name['STag']._options = None
_QINQ.fields_by_name['CTag']._options = None
_SVCREWRITEINFO.fields_by_name['SrcPrefix']._options = None
_SVCREWRITEINFO.fields_by_name['DstPrefix']._options = None
_FLOWLOGSPEC.fields_by_name['LogOnCreate']._options = None
_FLOWLOGSPEC.fields_by_name['LogOnDelete']._options = None
_FLOWLOGSPEC.fields_by_name['LogLongLivedFlows']._options = None
_LEARNSOURCE.fields_by_name['ArpLearnEn']._options = None
_LEARNSOURCE.fields_by_name['DhcpLearnEn']._options = None
_LEARNSOURCE.fields_by_name['DataPktLearnEn']._options = None
_LEARNSPEC.fields_by_name['LearnMode']._options = None
_LEARNSPEC.fields_by_name['LearnAgeTimeout']._options = None
_LEARNSPEC.fields_by_name['LearnSource']._options = None
_COUNTER.fields_by_name['Name']._options = None
_COUNTER.fields_by_name['Value']._options = None
_BGPCOMMUNITY.fields_by_name['Asn']._options = None
_BGPCOMMUNITY.fields_by_name['Community']._options = None
_NATACTION.fields_by_name['PortReuse']._options = None
# @@protoc_insertion_point(module_scope)
