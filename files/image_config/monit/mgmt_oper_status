#!/usr/bin/env python3

"""
"""

import docker
import sys
import subprocess
import syslog

from sonic_py_common import multi_asic, device_info
from swsscommon.swsscommon import SonicV2Connector


def main():
    db = SonicV2Connector(use_unix_socket_path=True)
    db.connect('CONFIG_DB')
    db.connect('STATE_DB')
    mgmt_ports_keys = db.keys(db.CONFIG_DB, 'MGMT_PORT|*' )
    if not mgmt_ports_keys:
        syslog.syslog(syslog.LOG_DEBUG, 'No management interface found')
    else:
        try:
            mgmt_ports = [key.split('MGMT_PORT|')[-1] for key in mgmt_ports_keys]
            for port in mgmt_ports:
                state_db_key = "MGMT_PORT_TABLE|{}".format(port)
                # Reset status of mgmt port before updating with latest status
                db.set(db.STATE_DB, state_db_key, 'oper_status', 'unknown')
                port_operstate_path = '/sys/class/net/{}/operstate'.format(port)
                oper_status = subprocess.run(['cat', port_operstate_path], capture_output=True, text=True)
                db.set(db.STATE_DB, state_db_key, 'oper_status', oper_status.stdout.strip())
                syslog.syslog(syslog.LOG_INFO, "mgmt_oper_status_check: {}".format(oper_status.stdout.strip()))
        except Exception as e:
            syslog.syslog(syslog.LOG_ERR, "mgmt_oper_status_check exception : {}".format(str(e)))


if __name__ == "__main__":
    main()
    sys.exit(0)
